{"future_incompat_report":[{"diagnostic":{"message":"trailing semicolon in macro used in expression position","code":{"code":"semicolon_in_expressions_from_macros","explanation":null},"level":"warning","spans":[{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/iso8601-0.3.0/src/parsers.rs","byte_start":1552,"byte_end":1553,"line_start":56,"line_end":56,"column_start":30,"column_end":31,"is_primary":true,"text":[{"text":"    check!($input, call!($f));","highlight_start":30,"highlight_end":31}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.2.3/src/simple_errors.rs","byte_start":6253,"byte_end":6277,"line_start":195,"line_end":195,"column_start":15,"column_end":39,"is_primary":false,"text":[{"text":"        match $submac2!(o, $($args2)*) {","highlight_start":15,"highlight_end":39}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.2.3/src/simple_errors.rs","byte_start":5610,"byte_end":5674,"line_start":178,"line_end":178,"column_start":5,"column_end":69,"is_primary":false,"text":[{"text":"    flat_map!(__impl $i, $submac!($($args)*), $submac2!($($args2)*));","highlight_start":5,"highlight_end":69}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.2.3/src/macros.rs","byte_start":3282,"byte_end":3304,"line_start":114,"line_end":114,"column_start":13,"column_end":35,"is_primary":false,"text":[{"text":"            $submac!(i, $($args)*)","highlight_start":13,"highlight_end":35}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/iso8601-0.3.0/src/parsers.rs","byte_start":1783,"byte_end":1880,"line_start":69,"line_end":69,"column_start":1,"column_end":98,"is_primary":false,"text":[{"text":"named!(take_4_digits<CompleteByteSlice,CompleteByteSlice>, flat_map!(take!(4), check!(is_digit)));","highlight_start":1,"highlight_end":98}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"named!","def_site_span":{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.2.3/src/macros.rs","byte_start":2688,"byte_end":2706,"line_start":98,"line_end":98,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! named (","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"flat_map!","def_site_span":{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.2.3/src/simple_errors.rs","byte_start":5500,"byte_end":5521,"line_start":176,"line_end":176,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! flat_map(","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"flat_map!","def_site_span":{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.2.3/src/simple_errors.rs","byte_start":5500,"byte_end":5521,"line_start":176,"line_end":176,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! flat_map(","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"check!","def_site_span":{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/iso8601-0.3.0/src/parsers.rs","byte_start":1064,"byte_end":1561,"line_start":37,"line_end":58,"column_start":1,"column_end":3,"is_primary":false,"text":[{"text":"macro_rules! check(","highlight_start":1,"highlight_end":20},{"text":"  ($input:expr, $submac:ident!( $($args:tt)* )) => (","highlight_start":1,"highlight_end":53},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    {","highlight_start":1,"highlight_end":6},{"text":"      let mut failed = false;","highlight_start":1,"highlight_end":30},{"text":"      for &idx in $input.0 {","highlight_start":1,"highlight_end":29},{"text":"        if !$submac!(idx, $($args)*) {","highlight_start":1,"highlight_end":39},{"text":"            failed = true;","highlight_start":1,"highlight_end":27},{"text":"            break;","highlight_start":1,"highlight_end":19},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"      }","highlight_start":1,"highlight_end":8},{"text":"      if failed {","highlight_start":1,"highlight_end":18},{"text":"        Err(nom::Err::Error(error_position!($input, nom::ErrorKind::Custom(20u32))))","highlight_start":1,"highlight_end":85},{"text":"      } else {","highlight_start":1,"highlight_end":15},{"text":"        Ok((CompleteByteSlice(&b\"\"[..]), $input))","highlight_start":1,"highlight_end":50},{"text":"      }","highlight_start":1,"highlight_end":8},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"  );","highlight_start":1,"highlight_end":5},{"text":"  ($input:expr, $f:expr) => (","highlight_start":1,"highlight_end":30},{"text":"    check!($input, call!($f));","highlight_start":1,"highlight_end":31},{"text":"  );","highlight_start":1,"highlight_end":5},{"text":");","highlight_start":1,"highlight_end":3}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"macro invocations at the end of a block are treated as expressions","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"to ignore the value produced by the macro, add a semicolon after the invocation of `check`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"`#[allow(semicolon_in_expressions_from_macros)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: trailing semicolon in macro used in expression position\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/iso8601-0.3.0/src/parsers.rs:56:30\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m56\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    check!($input, call!($f));\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                             \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m69\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mnamed!(take_4_digits<CompleteByteSlice,CompleteByteSlice>, flat_map!(take!(4), check!(is_digit)));\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-------------------------------------------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: macro invocations at the end of a block are treated as expressions\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: to ignore the value produced by the macro, add a semicolon after the invocation of `check`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[allow(semicolon_in_expressions_from_macros)]` on by default\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `check` which comes from the expansion of the macro `named` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}},{"diagnostic":{"message":"trailing semicolon in macro used in expression position","code":{"code":"semicolon_in_expressions_from_macros","explanation":null},"level":"warning","spans":[{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/iso8601-0.3.0/src/parsers.rs","byte_start":1552,"byte_end":1553,"line_start":56,"line_end":56,"column_start":30,"column_end":31,"is_primary":true,"text":[{"text":"    check!($input, call!($f));","highlight_start":30,"highlight_end":31}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.2.3/src/simple_errors.rs","byte_start":6253,"byte_end":6277,"line_start":195,"line_end":195,"column_start":15,"column_end":39,"is_primary":false,"text":[{"text":"        match $submac2!(o, $($args2)*) {","highlight_start":15,"highlight_end":39}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.2.3/src/simple_errors.rs","byte_start":5610,"byte_end":5674,"line_start":178,"line_end":178,"column_start":5,"column_end":69,"is_primary":false,"text":[{"text":"    flat_map!(__impl $i, $submac!($($args)*), $submac2!($($args2)*));","highlight_start":5,"highlight_end":69}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/iso8601-0.3.0/src/parsers.rs","byte_start":1723,"byte_end":1761,"line_start":64,"line_end":64,"column_start":9,"column_end":47,"is_primary":false,"text":[{"text":"        flat_map!($input, take!(1), check!(f))","highlight_start":9,"highlight_end":47}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.2.3/src/sequence.rs","byte_start":10503,"byte_end":10526,"line_start":366,"line_end":366,"column_start":14,"column_end":37,"is_primary":false,"text":[{"text":"      match  $submac!(i_, $($args)*) {","highlight_start":14,"highlight_end":37}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.2.3/src/sequence.rs","byte_start":10130,"byte_end":10161,"line_start":351,"line_end":351,"column_start":11,"column_end":42,"is_primary":false,"text":[{"text":"          do_parse!(__impl i_, $($rest)*)","highlight_start":11,"highlight_end":42}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.2.3/src/sequence.rs","byte_start":11854,"byte_end":11885,"line_start":421,"line_end":421,"column_start":7,"column_end":38,"is_primary":false,"text":[{"text":"      do_parse!(__impl $i, $($rest)*)","highlight_start":7,"highlight_end":38}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.2.3/src/macros.rs","byte_start":3282,"byte_end":3304,"line_start":114,"line_end":114,"column_start":13,"column_end":35,"is_primary":false,"text":[{"text":"            $submac!(i, $($args)*)","highlight_start":13,"highlight_end":35}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/iso8601-0.3.0/src/parsers.rs","byte_start":2280,"byte_end":2395,"line_start":84,"line_end":84,"column_start":1,"column_end":116,"is_primary":false,"text":[{"text":"named!(lower_month <CompleteByteSlice,u32>, do_parse!(tag!(\"0\") >> s:char_between!('1', '9') >> (buf_to_u32(s.0))));","highlight_start":1,"highlight_end":116}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"named!","def_site_span":{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.2.3/src/macros.rs","byte_start":2688,"byte_end":2706,"line_start":98,"line_end":98,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! named (","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"do_parse!","def_site_span":{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.2.3/src/sequence.rs","byte_start":8622,"byte_end":8643,"line_start":305,"line_end":305,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! do_parse (","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"do_parse!","def_site_span":{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.2.3/src/sequence.rs","byte_start":8622,"byte_end":8643,"line_start":305,"line_end":305,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! do_parse (","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"do_parse!","def_site_span":{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.2.3/src/sequence.rs","byte_start":8622,"byte_end":8643,"line_start":305,"line_end":305,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! do_parse (","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"char_between!","def_site_span":{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/iso8601-0.3.0/src/parsers.rs","byte_start":1563,"byte_end":1781,"line_start":60,"line_end":67,"column_start":1,"column_end":3,"is_primary":false,"text":[{"text":"macro_rules! char_between(","highlight_start":1,"highlight_end":27},{"text":"    ($input:expr, $min:expr, $max:expr) => (","highlight_start":1,"highlight_end":45},{"text":"        {","highlight_start":1,"highlight_end":10},{"text":"        fn f(c: u8) -> bool { c >= ($min as u8) && c <= ($max as u8)}","highlight_start":1,"highlight_end":70},{"text":"        flat_map!($input, take!(1), check!(f))","highlight_start":1,"highlight_end":47},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    );","highlight_start":1,"highlight_end":7},{"text":");","highlight_start":1,"highlight_end":3}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"flat_map!","def_site_span":{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.2.3/src/simple_errors.rs","byte_start":5500,"byte_end":5521,"line_start":176,"line_end":176,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! flat_map(","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"flat_map!","def_site_span":{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.2.3/src/simple_errors.rs","byte_start":5500,"byte_end":5521,"line_start":176,"line_end":176,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! flat_map(","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"check!","def_site_span":{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/iso8601-0.3.0/src/parsers.rs","byte_start":1064,"byte_end":1561,"line_start":37,"line_end":58,"column_start":1,"column_end":3,"is_primary":false,"text":[{"text":"macro_rules! check(","highlight_start":1,"highlight_end":20},{"text":"  ($input:expr, $submac:ident!( $($args:tt)* )) => (","highlight_start":1,"highlight_end":53},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    {","highlight_start":1,"highlight_end":6},{"text":"      let mut failed = false;","highlight_start":1,"highlight_end":30},{"text":"      for &idx in $input.0 {","highlight_start":1,"highlight_end":29},{"text":"        if !$submac!(idx, $($args)*) {","highlight_start":1,"highlight_end":39},{"text":"            failed = true;","highlight_start":1,"highlight_end":27},{"text":"            break;","highlight_start":1,"highlight_end":19},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"      }","highlight_start":1,"highlight_end":8},{"text":"      if failed {","highlight_start":1,"highlight_end":18},{"text":"        Err(nom::Err::Error(error_position!($input, nom::ErrorKind::Custom(20u32))))","highlight_start":1,"highlight_end":85},{"text":"      } else {","highlight_start":1,"highlight_end":15},{"text":"        Ok((CompleteByteSlice(&b\"\"[..]), $input))","highlight_start":1,"highlight_end":50},{"text":"      }","highlight_start":1,"highlight_end":8},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"  );","highlight_start":1,"highlight_end":5},{"text":"  ($input:expr, $f:expr) => (","highlight_start":1,"highlight_end":30},{"text":"    check!($input, call!($f));","highlight_start":1,"highlight_end":31},{"text":"  );","highlight_start":1,"highlight_end":5},{"text":");","highlight_start":1,"highlight_end":3}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"macro invocations at the end of a block are treated as expressions","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"to ignore the value produced by the macro, add a semicolon after the invocation of `check`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"`#[allow(semicolon_in_expressions_from_macros)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: trailing semicolon in macro used in expression position\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/iso8601-0.3.0/src/parsers.rs:56:30\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m56\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    check!($input, call!($f));\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                             \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m84\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mnamed!(lower_month <CompleteByteSlice,u32>, do_parse!(tag!(\"0\") >> s:char_between!('1', '9') >> (buf_to_u32(s.0))\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-------------------------------------------------------------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: macro invocations at the end of a block are treated as expressions\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: to ignore the value produced by the macro, add a semicolon after the invocation of `check`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[allow(semicolon_in_expressions_from_macros)]` on by default\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `check` which comes from the expansion of the macro `named` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}},{"diagnostic":{"message":"trailing semicolon in macro used in expression position","code":{"code":"semicolon_in_expressions_from_macros","explanation":null},"level":"warning","spans":[{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/iso8601-0.3.0/src/parsers.rs","byte_start":1552,"byte_end":1553,"line_start":56,"line_end":56,"column_start":30,"column_end":31,"is_primary":true,"text":[{"text":"    check!($input, call!($f));","highlight_start":30,"highlight_end":31}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.2.3/src/simple_errors.rs","byte_start":6253,"byte_end":6277,"line_start":195,"line_end":195,"column_start":15,"column_end":39,"is_primary":false,"text":[{"text":"        match $submac2!(o, $($args2)*) {","highlight_start":15,"highlight_end":39}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.2.3/src/simple_errors.rs","byte_start":5610,"byte_end":5674,"line_start":178,"line_end":178,"column_start":5,"column_end":69,"is_primary":false,"text":[{"text":"    flat_map!(__impl $i, $submac!($($args)*), $submac2!($($args2)*));","highlight_start":5,"highlight_end":69}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/iso8601-0.3.0/src/parsers.rs","byte_start":1723,"byte_end":1761,"line_start":64,"line_end":64,"column_start":9,"column_end":47,"is_primary":false,"text":[{"text":"        flat_map!($input, take!(1), check!(f))","highlight_start":9,"highlight_end":47}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.2.3/src/sequence.rs","byte_start":10503,"byte_end":10526,"line_start":366,"line_end":366,"column_start":14,"column_end":37,"is_primary":false,"text":[{"text":"      match  $submac!(i_, $($args)*) {","highlight_start":14,"highlight_end":37}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.2.3/src/sequence.rs","byte_start":10130,"byte_end":10161,"line_start":351,"line_end":351,"column_start":11,"column_end":42,"is_primary":false,"text":[{"text":"          do_parse!(__impl i_, $($rest)*)","highlight_start":11,"highlight_end":42}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.2.3/src/sequence.rs","byte_start":11854,"byte_end":11885,"line_start":421,"line_end":421,"column_start":7,"column_end":38,"is_primary":false,"text":[{"text":"      do_parse!(__impl $i, $($rest)*)","highlight_start":7,"highlight_end":38}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.2.3/src/macros.rs","byte_start":3282,"byte_end":3304,"line_start":114,"line_end":114,"column_start":13,"column_end":35,"is_primary":false,"text":[{"text":"            $submac!(i, $($args)*)","highlight_start":13,"highlight_end":35}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/iso8601-0.3.0/src/parsers.rs","byte_start":2397,"byte_end":2515,"line_start":85,"line_end":85,"column_start":1,"column_end":119,"is_primary":false,"text":[{"text":"named!(upper_month <CompleteByteSlice,u32>, do_parse!(tag!(\"1\") >> s:char_between!('0', '2') >> (10+buf_to_u32(s.0))));","highlight_start":1,"highlight_end":119}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"named!","def_site_span":{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.2.3/src/macros.rs","byte_start":2688,"byte_end":2706,"line_start":98,"line_end":98,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! named (","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"do_parse!","def_site_span":{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.2.3/src/sequence.rs","byte_start":8622,"byte_end":8643,"line_start":305,"line_end":305,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! do_parse (","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"do_parse!","def_site_span":{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.2.3/src/sequence.rs","byte_start":8622,"byte_end":8643,"line_start":305,"line_end":305,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! do_parse (","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"do_parse!","def_site_span":{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.2.3/src/sequence.rs","byte_start":8622,"byte_end":8643,"line_start":305,"line_end":305,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! do_parse (","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"char_between!","def_site_span":{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/iso8601-0.3.0/src/parsers.rs","byte_start":1563,"byte_end":1781,"line_start":60,"line_end":67,"column_start":1,"column_end":3,"is_primary":false,"text":[{"text":"macro_rules! char_between(","highlight_start":1,"highlight_end":27},{"text":"    ($input:expr, $min:expr, $max:expr) => (","highlight_start":1,"highlight_end":45},{"text":"        {","highlight_start":1,"highlight_end":10},{"text":"        fn f(c: u8) -> bool { c >= ($min as u8) && c <= ($max as u8)}","highlight_start":1,"highlight_end":70},{"text":"        flat_map!($input, take!(1), check!(f))","highlight_start":1,"highlight_end":47},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    );","highlight_start":1,"highlight_end":7},{"text":");","highlight_start":1,"highlight_end":3}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"flat_map!","def_site_span":{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.2.3/src/simple_errors.rs","byte_start":5500,"byte_end":5521,"line_start":176,"line_end":176,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! flat_map(","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"flat_map!","def_site_span":{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.2.3/src/simple_errors.rs","byte_start":5500,"byte_end":5521,"line_start":176,"line_end":176,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! flat_map(","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"check!","def_site_span":{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/iso8601-0.3.0/src/parsers.rs","byte_start":1064,"byte_end":1561,"line_start":37,"line_end":58,"column_start":1,"column_end":3,"is_primary":false,"text":[{"text":"macro_rules! check(","highlight_start":1,"highlight_end":20},{"text":"  ($input:expr, $submac:ident!( $($args:tt)* )) => (","highlight_start":1,"highlight_end":53},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    {","highlight_start":1,"highlight_end":6},{"text":"      let mut failed = false;","highlight_start":1,"highlight_end":30},{"text":"      for &idx in $input.0 {","highlight_start":1,"highlight_end":29},{"text":"        if !$submac!(idx, $($args)*) {","highlight_start":1,"highlight_end":39},{"text":"            failed = true;","highlight_start":1,"highlight_end":27},{"text":"            break;","highlight_start":1,"highlight_end":19},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"      }","highlight_start":1,"highlight_end":8},{"text":"      if failed {","highlight_start":1,"highlight_end":18},{"text":"        Err(nom::Err::Error(error_position!($input, nom::ErrorKind::Custom(20u32))))","highlight_start":1,"highlight_end":85},{"text":"      } else {","highlight_start":1,"highlight_end":15},{"text":"        Ok((CompleteByteSlice(&b\"\"[..]), $input))","highlight_start":1,"highlight_end":50},{"text":"      }","highlight_start":1,"highlight_end":8},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"  );","highlight_start":1,"highlight_end":5},{"text":"  ($input:expr, $f:expr) => (","highlight_start":1,"highlight_end":30},{"text":"    check!($input, call!($f));","highlight_start":1,"highlight_end":31},{"text":"  );","highlight_start":1,"highlight_end":5},{"text":");","highlight_start":1,"highlight_end":3}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"macro invocations at the end of a block are treated as expressions","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"to ignore the value produced by the macro, add a semicolon after the invocation of `check`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"`#[allow(semicolon_in_expressions_from_macros)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: trailing semicolon in macro used in expression position\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/iso8601-0.3.0/src/parsers.rs:56:30\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m56\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    check!($input, call!($f));\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                             \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m85\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mnamed!(upper_month <CompleteByteSlice,u32>, do_parse!(tag!(\"1\") >> s:char_between!('0', '2') >> (10+buf_to_u32(s.0))\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------------------------------------------------------------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: macro invocations at the end of a block are treated as expressions\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: to ignore the value produced by the macro, add a semicolon after the invocation of `check`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[allow(semicolon_in_expressions_from_macros)]` on by default\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `check` which comes from the expansion of the macro `named` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}},{"diagnostic":{"message":"trailing semicolon in macro used in expression position","code":{"code":"semicolon_in_expressions_from_macros","explanation":null},"level":"warning","spans":[{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/iso8601-0.3.0/src/parsers.rs","byte_start":1552,"byte_end":1553,"line_start":56,"line_end":56,"column_start":30,"column_end":31,"is_primary":true,"text":[{"text":"    check!($input, call!($f));","highlight_start":30,"highlight_end":31}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.2.3/src/simple_errors.rs","byte_start":6253,"byte_end":6277,"line_start":195,"line_end":195,"column_start":15,"column_end":39,"is_primary":false,"text":[{"text":"        match $submac2!(o, $($args2)*) {","highlight_start":15,"highlight_end":39}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.2.3/src/simple_errors.rs","byte_start":5610,"byte_end":5674,"line_start":178,"line_end":178,"column_start":5,"column_end":69,"is_primary":false,"text":[{"text":"    flat_map!(__impl $i, $submac!($($args)*), $submac2!($($args2)*));","highlight_start":5,"highlight_end":69}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/iso8601-0.3.0/src/parsers.rs","byte_start":1723,"byte_end":1761,"line_start":64,"line_end":64,"column_start":9,"column_end":47,"is_primary":false,"text":[{"text":"        flat_map!($input, take!(1), check!(f))","highlight_start":9,"highlight_end":47}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.2.3/src/sequence.rs","byte_start":10503,"byte_end":10526,"line_start":366,"line_end":366,"column_start":14,"column_end":37,"is_primary":false,"text":[{"text":"      match  $submac!(i_, $($args)*) {","highlight_start":14,"highlight_end":37}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.2.3/src/sequence.rs","byte_start":10130,"byte_end":10161,"line_start":351,"line_end":351,"column_start":11,"column_end":42,"is_primary":false,"text":[{"text":"          do_parse!(__impl i_, $($rest)*)","highlight_start":11,"highlight_end":42}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.2.3/src/sequence.rs","byte_start":11854,"byte_end":11885,"line_start":421,"line_end":421,"column_start":7,"column_end":38,"is_primary":false,"text":[{"text":"      do_parse!(__impl $i, $($rest)*)","highlight_start":7,"highlight_end":38}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.2.3/src/macros.rs","byte_start":3282,"byte_end":3304,"line_start":114,"line_end":114,"column_start":13,"column_end":35,"is_primary":false,"text":[{"text":"            $submac!(i, $($args)*)","highlight_start":13,"highlight_end":35}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/iso8601-0.3.0/src/parsers.rs","byte_start":2596,"byte_end":2709,"line_start":89,"line_end":89,"column_start":1,"column_end":114,"is_primary":false,"text":[{"text":"named!(day_zero  <CompleteByteSlice,u32>, do_parse!(tag!(\"0\") >> s:char_between!('1', '9') >> (buf_to_u32(s.0))));","highlight_start":1,"highlight_end":114}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"named!","def_site_span":{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.2.3/src/macros.rs","byte_start":2688,"byte_end":2706,"line_start":98,"line_end":98,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! named (","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"do_parse!","def_site_span":{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.2.3/src/sequence.rs","byte_start":8622,"byte_end":8643,"line_start":305,"line_end":305,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! do_parse (","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"do_parse!","def_site_span":{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.2.3/src/sequence.rs","byte_start":8622,"byte_end":8643,"line_start":305,"line_end":305,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! do_parse (","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"do_parse!","def_site_span":{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.2.3/src/sequence.rs","byte_start":8622,"byte_end":8643,"line_start":305,"line_end":305,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! do_parse (","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"char_between!","def_site_span":{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/iso8601-0.3.0/src/parsers.rs","byte_start":1563,"byte_end":1781,"line_start":60,"line_end":67,"column_start":1,"column_end":3,"is_primary":false,"text":[{"text":"macro_rules! char_between(","highlight_start":1,"highlight_end":27},{"text":"    ($input:expr, $min:expr, $max:expr) => (","highlight_start":1,"highlight_end":45},{"text":"        {","highlight_start":1,"highlight_end":10},{"text":"        fn f(c: u8) -> bool { c >= ($min as u8) && c <= ($max as u8)}","highlight_start":1,"highlight_end":70},{"text":"        flat_map!($input, take!(1), check!(f))","highlight_start":1,"highlight_end":47},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    );","highlight_start":1,"highlight_end":7},{"text":");","highlight_start":1,"highlight_end":3}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"flat_map!","def_site_span":{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.2.3/src/simple_errors.rs","byte_start":5500,"byte_end":5521,"line_start":176,"line_end":176,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! flat_map(","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"flat_map!","def_site_span":{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.2.3/src/simple_errors.rs","byte_start":5500,"byte_end":5521,"line_start":176,"line_end":176,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! flat_map(","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"check!","def_site_span":{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/iso8601-0.3.0/src/parsers.rs","byte_start":1064,"byte_end":1561,"line_start":37,"line_end":58,"column_start":1,"column_end":3,"is_primary":false,"text":[{"text":"macro_rules! check(","highlight_start":1,"highlight_end":20},{"text":"  ($input:expr, $submac:ident!( $($args:tt)* )) => (","highlight_start":1,"highlight_end":53},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    {","highlight_start":1,"highlight_end":6},{"text":"      let mut failed = false;","highlight_start":1,"highlight_end":30},{"text":"      for &idx in $input.0 {","highlight_start":1,"highlight_end":29},{"text":"        if !$submac!(idx, $($args)*) {","highlight_start":1,"highlight_end":39},{"text":"            failed = true;","highlight_start":1,"highlight_end":27},{"text":"            break;","highlight_start":1,"highlight_end":19},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"      }","highlight_start":1,"highlight_end":8},{"text":"      if failed {","highlight_start":1,"highlight_end":18},{"text":"        Err(nom::Err::Error(error_position!($input, nom::ErrorKind::Custom(20u32))))","highlight_start":1,"highlight_end":85},{"text":"      } else {","highlight_start":1,"highlight_end":15},{"text":"        Ok((CompleteByteSlice(&b\"\"[..]), $input))","highlight_start":1,"highlight_end":50},{"text":"      }","highlight_start":1,"highlight_end":8},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"  );","highlight_start":1,"highlight_end":5},{"text":"  ($input:expr, $f:expr) => (","highlight_start":1,"highlight_end":30},{"text":"    check!($input, call!($f));","highlight_start":1,"highlight_end":31},{"text":"  );","highlight_start":1,"highlight_end":5},{"text":");","highlight_start":1,"highlight_end":3}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"macro invocations at the end of a block are treated as expressions","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"to ignore the value produced by the macro, add a semicolon after the invocation of `check`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"`#[allow(semicolon_in_expressions_from_macros)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: trailing semicolon in macro used in expression position\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/iso8601-0.3.0/src/parsers.rs:56:30\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m56\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    check!($input, call!($f));\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                             \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m89\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mnamed!(day_zero  <CompleteByteSlice,u32>, do_parse!(tag!(\"0\") >> s:char_between!('1', '9') >> (buf_to_u32(s.0))));\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-----------------------------------------------------------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: macro invocations at the end of a block are treated as expressions\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: to ignore the value produced by the macro, add a semicolon after the invocation of `check`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[allow(semicolon_in_expressions_from_macros)]` on by default\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `check` which comes from the expansion of the macro `named` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}},{"diagnostic":{"message":"trailing semicolon in macro used in expression position","code":{"code":"semicolon_in_expressions_from_macros","explanation":null},"level":"warning","spans":[{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/iso8601-0.3.0/src/parsers.rs","byte_start":1552,"byte_end":1553,"line_start":56,"line_end":56,"column_start":30,"column_end":31,"is_primary":true,"text":[{"text":"    check!($input, call!($f));","highlight_start":30,"highlight_end":31}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.2.3/src/simple_errors.rs","byte_start":6253,"byte_end":6277,"line_start":195,"line_end":195,"column_start":15,"column_end":39,"is_primary":false,"text":[{"text":"        match $submac2!(o, $($args2)*) {","highlight_start":15,"highlight_end":39}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.2.3/src/simple_errors.rs","byte_start":5610,"byte_end":5674,"line_start":178,"line_end":178,"column_start":5,"column_end":69,"is_primary":false,"text":[{"text":"    flat_map!(__impl $i, $submac!($($args)*), $submac2!($($args2)*));","highlight_start":5,"highlight_end":69}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/iso8601-0.3.0/src/parsers.rs","byte_start":1723,"byte_end":1761,"line_start":64,"line_end":64,"column_start":9,"column_end":47,"is_primary":false,"text":[{"text":"        flat_map!($input, take!(1), check!(f))","highlight_start":9,"highlight_end":47}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.2.3/src/sequence.rs","byte_start":10503,"byte_end":10526,"line_start":366,"line_end":366,"column_start":14,"column_end":37,"is_primary":false,"text":[{"text":"      match  $submac!(i_, $($args)*) {","highlight_start":14,"highlight_end":37}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.2.3/src/sequence.rs","byte_start":10130,"byte_end":10161,"line_start":351,"line_end":351,"column_start":11,"column_end":42,"is_primary":false,"text":[{"text":"          do_parse!(__impl i_, $($rest)*)","highlight_start":11,"highlight_end":42}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.2.3/src/sequence.rs","byte_start":11854,"byte_end":11885,"line_start":421,"line_end":421,"column_start":7,"column_end":38,"is_primary":false,"text":[{"text":"      do_parse!(__impl $i, $($rest)*)","highlight_start":7,"highlight_end":38}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.2.3/src/macros.rs","byte_start":3282,"byte_end":3304,"line_start":114,"line_end":114,"column_start":13,"column_end":35,"is_primary":false,"text":[{"text":"            $submac!(i, $($args)*)","highlight_start":13,"highlight_end":35}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/iso8601-0.3.0/src/parsers.rs","byte_start":2711,"byte_end":2827,"line_start":90,"line_end":90,"column_start":1,"column_end":117,"is_primary":false,"text":[{"text":"named!(day_one   <CompleteByteSlice,u32>, do_parse!(tag!(\"1\") >> s:char_between!('0', '9') >> (10+buf_to_u32(s.0))));","highlight_start":1,"highlight_end":117}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"named!","def_site_span":{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.2.3/src/macros.rs","byte_start":2688,"byte_end":2706,"line_start":98,"line_end":98,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! named (","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"do_parse!","def_site_span":{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.2.3/src/sequence.rs","byte_start":8622,"byte_end":8643,"line_start":305,"line_end":305,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! do_parse (","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"do_parse!","def_site_span":{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.2.3/src/sequence.rs","byte_start":8622,"byte_end":8643,"line_start":305,"line_end":305,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! do_parse (","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"do_parse!","def_site_span":{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.2.3/src/sequence.rs","byte_start":8622,"byte_end":8643,"line_start":305,"line_end":305,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! do_parse (","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"char_between!","def_site_span":{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/iso8601-0.3.0/src/parsers.rs","byte_start":1563,"byte_end":1781,"line_start":60,"line_end":67,"column_start":1,"column_end":3,"is_primary":false,"text":[{"text":"macro_rules! char_between(","highlight_start":1,"highlight_end":27},{"text":"    ($input:expr, $min:expr, $max:expr) => (","highlight_start":1,"highlight_end":45},{"text":"        {","highlight_start":1,"highlight_end":10},{"text":"        fn f(c: u8) -> bool { c >= ($min as u8) && c <= ($max as u8)}","highlight_start":1,"highlight_end":70},{"text":"        flat_map!($input, take!(1), check!(f))","highlight_start":1,"highlight_end":47},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    );","highlight_start":1,"highlight_end":7},{"text":");","highlight_start":1,"highlight_end":3}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"flat_map!","def_site_span":{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.2.3/src/simple_errors.rs","byte_start":5500,"byte_end":5521,"line_start":176,"line_end":176,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! flat_map(","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"flat_map!","def_site_span":{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.2.3/src/simple_errors.rs","byte_start":5500,"byte_end":5521,"line_start":176,"line_end":176,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! flat_map(","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"check!","def_site_span":{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/iso8601-0.3.0/src/parsers.rs","byte_start":1064,"byte_end":1561,"line_start":37,"line_end":58,"column_start":1,"column_end":3,"is_primary":false,"text":[{"text":"macro_rules! check(","highlight_start":1,"highlight_end":20},{"text":"  ($input:expr, $submac:ident!( $($args:tt)* )) => (","highlight_start":1,"highlight_end":53},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    {","highlight_start":1,"highlight_end":6},{"text":"      let mut failed = false;","highlight_start":1,"highlight_end":30},{"text":"      for &idx in $input.0 {","highlight_start":1,"highlight_end":29},{"text":"        if !$submac!(idx, $($args)*) {","highlight_start":1,"highlight_end":39},{"text":"            failed = true;","highlight_start":1,"highlight_end":27},{"text":"            break;","highlight_start":1,"highlight_end":19},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"      }","highlight_start":1,"highlight_end":8},{"text":"      if failed {","highlight_start":1,"highlight_end":18},{"text":"        Err(nom::Err::Error(error_position!($input, nom::ErrorKind::Custom(20u32))))","highlight_start":1,"highlight_end":85},{"text":"      } else {","highlight_start":1,"highlight_end":15},{"text":"        Ok((CompleteByteSlice(&b\"\"[..]), $input))","highlight_start":1,"highlight_end":50},{"text":"      }","highlight_start":1,"highlight_end":8},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"  );","highlight_start":1,"highlight_end":5},{"text":"  ($input:expr, $f:expr) => (","highlight_start":1,"highlight_end":30},{"text":"    check!($input, call!($f));","highlight_start":1,"highlight_end":31},{"text":"  );","highlight_start":1,"highlight_end":5},{"text":");","highlight_start":1,"highlight_end":3}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"macro invocations at the end of a block are treated as expressions","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"to ignore the value produced by the macro, add a semicolon after the invocation of `check`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"`#[allow(semicolon_in_expressions_from_macros)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: trailing semicolon in macro used in expression position\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/iso8601-0.3.0/src/parsers.rs:56:30\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m56\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    check!($input, call!($f));\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                             \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m90\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mnamed!(day_one   <CompleteByteSlice,u32>, do_parse!(tag!(\"1\") >> s:char_between!('0', '9') >> (10+buf_to_u32(s.0))\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------------------------------------------------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: macro invocations at the end of a block are treated as expressions\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: to ignore the value produced by the macro, add a semicolon after the invocation of `check`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[allow(semicolon_in_expressions_from_macros)]` on by default\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `check` which comes from the expansion of the macro `named` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}},{"diagnostic":{"message":"trailing semicolon in macro used in expression position","code":{"code":"semicolon_in_expressions_from_macros","explanation":null},"level":"warning","spans":[{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/iso8601-0.3.0/src/parsers.rs","byte_start":1552,"byte_end":1553,"line_start":56,"line_end":56,"column_start":30,"column_end":31,"is_primary":true,"text":[{"text":"    check!($input, call!($f));","highlight_start":30,"highlight_end":31}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.2.3/src/simple_errors.rs","byte_start":6253,"byte_end":6277,"line_start":195,"line_end":195,"column_start":15,"column_end":39,"is_primary":false,"text":[{"text":"        match $submac2!(o, $($args2)*) {","highlight_start":15,"highlight_end":39}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.2.3/src/simple_errors.rs","byte_start":5610,"byte_end":5674,"line_start":178,"line_end":178,"column_start":5,"column_end":69,"is_primary":false,"text":[{"text":"    flat_map!(__impl $i, $submac!($($args)*), $submac2!($($args2)*));","highlight_start":5,"highlight_end":69}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/iso8601-0.3.0/src/parsers.rs","byte_start":1723,"byte_end":1761,"line_start":64,"line_end":64,"column_start":9,"column_end":47,"is_primary":false,"text":[{"text":"        flat_map!($input, take!(1), check!(f))","highlight_start":9,"highlight_end":47}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.2.3/src/sequence.rs","byte_start":10503,"byte_end":10526,"line_start":366,"line_end":366,"column_start":14,"column_end":37,"is_primary":false,"text":[{"text":"      match  $submac!(i_, $($args)*) {","highlight_start":14,"highlight_end":37}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.2.3/src/sequence.rs","byte_start":10130,"byte_end":10161,"line_start":351,"line_end":351,"column_start":11,"column_end":42,"is_primary":false,"text":[{"text":"          do_parse!(__impl i_, $($rest)*)","highlight_start":11,"highlight_end":42}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.2.3/src/sequence.rs","byte_start":11854,"byte_end":11885,"line_start":421,"line_end":421,"column_start":7,"column_end":38,"is_primary":false,"text":[{"text":"      do_parse!(__impl $i, $($rest)*)","highlight_start":7,"highlight_end":38}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.2.3/src/macros.rs","byte_start":3282,"byte_end":3304,"line_start":114,"line_end":114,"column_start":13,"column_end":35,"is_primary":false,"text":[{"text":"            $submac!(i, $($args)*)","highlight_start":13,"highlight_end":35}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/iso8601-0.3.0/src/parsers.rs","byte_start":2829,"byte_end":2945,"line_start":91,"line_end":91,"column_start":1,"column_end":117,"is_primary":false,"text":[{"text":"named!(day_two   <CompleteByteSlice,u32>, do_parse!(tag!(\"2\") >> s:char_between!('0', '9') >> (20+buf_to_u32(s.0))));","highlight_start":1,"highlight_end":117}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"named!","def_site_span":{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.2.3/src/macros.rs","byte_start":2688,"byte_end":2706,"line_start":98,"line_end":98,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! named (","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"do_parse!","def_site_span":{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.2.3/src/sequence.rs","byte_start":8622,"byte_end":8643,"line_start":305,"line_end":305,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! do_parse (","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"do_parse!","def_site_span":{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.2.3/src/sequence.rs","byte_start":8622,"byte_end":8643,"line_start":305,"line_end":305,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! do_parse (","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"do_parse!","def_site_span":{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.2.3/src/sequence.rs","byte_start":8622,"byte_end":8643,"line_start":305,"line_end":305,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! do_parse (","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"char_between!","def_site_span":{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/iso8601-0.3.0/src/parsers.rs","byte_start":1563,"byte_end":1781,"line_start":60,"line_end":67,"column_start":1,"column_end":3,"is_primary":false,"text":[{"text":"macro_rules! char_between(","highlight_start":1,"highlight_end":27},{"text":"    ($input:expr, $min:expr, $max:expr) => (","highlight_start":1,"highlight_end":45},{"text":"        {","highlight_start":1,"highlight_end":10},{"text":"        fn f(c: u8) -> bool { c >= ($min as u8) && c <= ($max as u8)}","highlight_start":1,"highlight_end":70},{"text":"        flat_map!($input, take!(1), check!(f))","highlight_start":1,"highlight_end":47},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    );","highlight_start":1,"highlight_end":7},{"text":");","highlight_start":1,"highlight_end":3}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"flat_map!","def_site_span":{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.2.3/src/simple_errors.rs","byte_start":5500,"byte_end":5521,"line_start":176,"line_end":176,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! flat_map(","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"flat_map!","def_site_span":{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.2.3/src/simple_errors.rs","byte_start":5500,"byte_end":5521,"line_start":176,"line_end":176,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! flat_map(","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"check!","def_site_span":{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/iso8601-0.3.0/src/parsers.rs","byte_start":1064,"byte_end":1561,"line_start":37,"line_end":58,"column_start":1,"column_end":3,"is_primary":false,"text":[{"text":"macro_rules! check(","highlight_start":1,"highlight_end":20},{"text":"  ($input:expr, $submac:ident!( $($args:tt)* )) => (","highlight_start":1,"highlight_end":53},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    {","highlight_start":1,"highlight_end":6},{"text":"      let mut failed = false;","highlight_start":1,"highlight_end":30},{"text":"      for &idx in $input.0 {","highlight_start":1,"highlight_end":29},{"text":"        if !$submac!(idx, $($args)*) {","highlight_start":1,"highlight_end":39},{"text":"            failed = true;","highlight_start":1,"highlight_end":27},{"text":"            break;","highlight_start":1,"highlight_end":19},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"      }","highlight_start":1,"highlight_end":8},{"text":"      if failed {","highlight_start":1,"highlight_end":18},{"text":"        Err(nom::Err::Error(error_position!($input, nom::ErrorKind::Custom(20u32))))","highlight_start":1,"highlight_end":85},{"text":"      } else {","highlight_start":1,"highlight_end":15},{"text":"        Ok((CompleteByteSlice(&b\"\"[..]), $input))","highlight_start":1,"highlight_end":50},{"text":"      }","highlight_start":1,"highlight_end":8},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"  );","highlight_start":1,"highlight_end":5},{"text":"  ($input:expr, $f:expr) => (","highlight_start":1,"highlight_end":30},{"text":"    check!($input, call!($f));","highlight_start":1,"highlight_end":31},{"text":"  );","highlight_start":1,"highlight_end":5},{"text":");","highlight_start":1,"highlight_end":3}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"macro invocations at the end of a block are treated as expressions","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"to ignore the value produced by the macro, add a semicolon after the invocation of `check`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"`#[allow(semicolon_in_expressions_from_macros)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: trailing semicolon in macro used in expression position\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/iso8601-0.3.0/src/parsers.rs:56:30\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m56\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    check!($input, call!($f));\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                             \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m91\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mnamed!(day_two   <CompleteByteSlice,u32>, do_parse!(tag!(\"2\") >> s:char_between!('0', '9') >> (20+buf_to_u32(s.0))\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------------------------------------------------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: macro invocations at the end of a block are treated as expressions\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: to ignore the value produced by the macro, add a semicolon after the invocation of `check`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[allow(semicolon_in_expressions_from_macros)]` on by default\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `check` which comes from the expansion of the macro `named` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}},{"diagnostic":{"message":"trailing semicolon in macro used in expression position","code":{"code":"semicolon_in_expressions_from_macros","explanation":null},"level":"warning","spans":[{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/iso8601-0.3.0/src/parsers.rs","byte_start":1552,"byte_end":1553,"line_start":56,"line_end":56,"column_start":30,"column_end":31,"is_primary":true,"text":[{"text":"    check!($input, call!($f));","highlight_start":30,"highlight_end":31}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.2.3/src/simple_errors.rs","byte_start":6253,"byte_end":6277,"line_start":195,"line_end":195,"column_start":15,"column_end":39,"is_primary":false,"text":[{"text":"        match $submac2!(o, $($args2)*) {","highlight_start":15,"highlight_end":39}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.2.3/src/simple_errors.rs","byte_start":5610,"byte_end":5674,"line_start":178,"line_end":178,"column_start":5,"column_end":69,"is_primary":false,"text":[{"text":"    flat_map!(__impl $i, $submac!($($args)*), $submac2!($($args2)*));","highlight_start":5,"highlight_end":69}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/iso8601-0.3.0/src/parsers.rs","byte_start":1723,"byte_end":1761,"line_start":64,"line_end":64,"column_start":9,"column_end":47,"is_primary":false,"text":[{"text":"        flat_map!($input, take!(1), check!(f))","highlight_start":9,"highlight_end":47}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.2.3/src/sequence.rs","byte_start":10503,"byte_end":10526,"line_start":366,"line_end":366,"column_start":14,"column_end":37,"is_primary":false,"text":[{"text":"      match  $submac!(i_, $($args)*) {","highlight_start":14,"highlight_end":37}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.2.3/src/sequence.rs","byte_start":10130,"byte_end":10161,"line_start":351,"line_end":351,"column_start":11,"column_end":42,"is_primary":false,"text":[{"text":"          do_parse!(__impl i_, $($rest)*)","highlight_start":11,"highlight_end":42}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.2.3/src/sequence.rs","byte_start":11854,"byte_end":11885,"line_start":421,"line_end":421,"column_start":7,"column_end":38,"is_primary":false,"text":[{"text":"      do_parse!(__impl $i, $($rest)*)","highlight_start":7,"highlight_end":38}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.2.3/src/macros.rs","byte_start":3282,"byte_end":3304,"line_start":114,"line_end":114,"column_start":13,"column_end":35,"is_primary":false,"text":[{"text":"            $submac!(i, $($args)*)","highlight_start":13,"highlight_end":35}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/iso8601-0.3.0/src/parsers.rs","byte_start":2947,"byte_end":3063,"line_start":92,"line_end":92,"column_start":1,"column_end":117,"is_primary":false,"text":[{"text":"named!(day_three <CompleteByteSlice,u32>, do_parse!(tag!(\"3\") >> s:char_between!('0', '1') >> (30+buf_to_u32(s.0))));","highlight_start":1,"highlight_end":117}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"named!","def_site_span":{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.2.3/src/macros.rs","byte_start":2688,"byte_end":2706,"line_start":98,"line_end":98,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! named (","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"do_parse!","def_site_span":{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.2.3/src/sequence.rs","byte_start":8622,"byte_end":8643,"line_start":305,"line_end":305,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! do_parse (","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"do_parse!","def_site_span":{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.2.3/src/sequence.rs","byte_start":8622,"byte_end":8643,"line_start":305,"line_end":305,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! do_parse (","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"do_parse!","def_site_span":{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.2.3/src/sequence.rs","byte_start":8622,"byte_end":8643,"line_start":305,"line_end":305,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! do_parse (","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"char_between!","def_site_span":{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/iso8601-0.3.0/src/parsers.rs","byte_start":1563,"byte_end":1781,"line_start":60,"line_end":67,"column_start":1,"column_end":3,"is_primary":false,"text":[{"text":"macro_rules! char_between(","highlight_start":1,"highlight_end":27},{"text":"    ($input:expr, $min:expr, $max:expr) => (","highlight_start":1,"highlight_end":45},{"text":"        {","highlight_start":1,"highlight_end":10},{"text":"        fn f(c: u8) -> bool { c >= ($min as u8) && c <= ($max as u8)}","highlight_start":1,"highlight_end":70},{"text":"        flat_map!($input, take!(1), check!(f))","highlight_start":1,"highlight_end":47},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    );","highlight_start":1,"highlight_end":7},{"text":");","highlight_start":1,"highlight_end":3}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"flat_map!","def_site_span":{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.2.3/src/simple_errors.rs","byte_start":5500,"byte_end":5521,"line_start":176,"line_end":176,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! flat_map(","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"flat_map!","def_site_span":{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.2.3/src/simple_errors.rs","byte_start":5500,"byte_end":5521,"line_start":176,"line_end":176,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! flat_map(","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"check!","def_site_span":{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/iso8601-0.3.0/src/parsers.rs","byte_start":1064,"byte_end":1561,"line_start":37,"line_end":58,"column_start":1,"column_end":3,"is_primary":false,"text":[{"text":"macro_rules! check(","highlight_start":1,"highlight_end":20},{"text":"  ($input:expr, $submac:ident!( $($args:tt)* )) => (","highlight_start":1,"highlight_end":53},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    {","highlight_start":1,"highlight_end":6},{"text":"      let mut failed = false;","highlight_start":1,"highlight_end":30},{"text":"      for &idx in $input.0 {","highlight_start":1,"highlight_end":29},{"text":"        if !$submac!(idx, $($args)*) {","highlight_start":1,"highlight_end":39},{"text":"            failed = true;","highlight_start":1,"highlight_end":27},{"text":"            break;","highlight_start":1,"highlight_end":19},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"      }","highlight_start":1,"highlight_end":8},{"text":"      if failed {","highlight_start":1,"highlight_end":18},{"text":"        Err(nom::Err::Error(error_position!($input, nom::ErrorKind::Custom(20u32))))","highlight_start":1,"highlight_end":85},{"text":"      } else {","highlight_start":1,"highlight_end":15},{"text":"        Ok((CompleteByteSlice(&b\"\"[..]), $input))","highlight_start":1,"highlight_end":50},{"text":"      }","highlight_start":1,"highlight_end":8},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"  );","highlight_start":1,"highlight_end":5},{"text":"  ($input:expr, $f:expr) => (","highlight_start":1,"highlight_end":30},{"text":"    check!($input, call!($f));","highlight_start":1,"highlight_end":31},{"text":"  );","highlight_start":1,"highlight_end":5},{"text":");","highlight_start":1,"highlight_end":3}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"macro invocations at the end of a block are treated as expressions","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"to ignore the value produced by the macro, add a semicolon after the invocation of `check`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"`#[allow(semicolon_in_expressions_from_macros)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: trailing semicolon in macro used in expression position\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/iso8601-0.3.0/src/parsers.rs:56:30\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m56\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    check!($input, call!($f));\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                             \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m92\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mnamed!(day_three <CompleteByteSlice,u32>, do_parse!(tag!(\"3\") >> s:char_between!('0', '1') >> (30+buf_to_u32(s.0))\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------------------------------------------------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: macro invocations at the end of a block are treated as expressions\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: to ignore the value produced by the macro, add a semicolon after the invocation of `check`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[allow(semicolon_in_expressions_from_macros)]` on by default\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `check` which comes from the expansion of the macro `named` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}},{"diagnostic":{"message":"trailing semicolon in macro used in expression position","code":{"code":"semicolon_in_expressions_from_macros","explanation":null},"level":"warning","spans":[{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/iso8601-0.3.0/src/parsers.rs","byte_start":1552,"byte_end":1553,"line_start":56,"line_end":56,"column_start":30,"column_end":31,"is_primary":true,"text":[{"text":"    check!($input, call!($f));","highlight_start":30,"highlight_end":31}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.2.3/src/simple_errors.rs","byte_start":6253,"byte_end":6277,"line_start":195,"line_end":195,"column_start":15,"column_end":39,"is_primary":false,"text":[{"text":"        match $submac2!(o, $($args2)*) {","highlight_start":15,"highlight_end":39}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.2.3/src/simple_errors.rs","byte_start":5610,"byte_end":5674,"line_start":178,"line_end":178,"column_start":5,"column_end":69,"is_primary":false,"text":[{"text":"    flat_map!(__impl $i, $submac!($($args)*), $submac2!($($args2)*));","highlight_start":5,"highlight_end":69}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/iso8601-0.3.0/src/parsers.rs","byte_start":1723,"byte_end":1761,"line_start":64,"line_end":64,"column_start":9,"column_end":47,"is_primary":false,"text":[{"text":"        flat_map!($input, take!(1), check!(f))","highlight_start":9,"highlight_end":47}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.2.3/src/sequence.rs","byte_start":10503,"byte_end":10526,"line_start":366,"line_end":366,"column_start":14,"column_end":37,"is_primary":false,"text":[{"text":"      match  $submac!(i_, $($args)*) {","highlight_start":14,"highlight_end":37}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.2.3/src/sequence.rs","byte_start":10130,"byte_end":10161,"line_start":351,"line_end":351,"column_start":11,"column_end":42,"is_primary":false,"text":[{"text":"          do_parse!(__impl i_, $($rest)*)","highlight_start":11,"highlight_end":42}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.2.3/src/sequence.rs","byte_start":11854,"byte_end":11885,"line_start":421,"line_end":421,"column_start":7,"column_end":38,"is_primary":false,"text":[{"text":"      do_parse!(__impl $i, $($rest)*)","highlight_start":7,"highlight_end":38}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.2.3/src/macros.rs","byte_start":3282,"byte_end":3304,"line_start":114,"line_end":114,"column_start":13,"column_end":35,"is_primary":false,"text":[{"text":"            $submac!(i, $($args)*)","highlight_start":13,"highlight_end":35}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/iso8601-0.3.0/src/parsers.rs","byte_start":3189,"byte_end":3306,"line_start":97,"line_end":97,"column_start":1,"column_end":118,"is_primary":false,"text":[{"text":"named!(week_three <CompleteByteSlice,u32>, do_parse!(tag!(\"3\") >> s:char_between!('0', '9') >> (30+buf_to_u32(s.0))));","highlight_start":1,"highlight_end":118}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"named!","def_site_span":{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.2.3/src/macros.rs","byte_start":2688,"byte_end":2706,"line_start":98,"line_end":98,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! named (","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"do_parse!","def_site_span":{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.2.3/src/sequence.rs","byte_start":8622,"byte_end":8643,"line_start":305,"line_end":305,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! do_parse (","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"do_parse!","def_site_span":{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.2.3/src/sequence.rs","byte_start":8622,"byte_end":8643,"line_start":305,"line_end":305,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! do_parse (","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"do_parse!","def_site_span":{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.2.3/src/sequence.rs","byte_start":8622,"byte_end":8643,"line_start":305,"line_end":305,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! do_parse (","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"char_between!","def_site_span":{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/iso8601-0.3.0/src/parsers.rs","byte_start":1563,"byte_end":1781,"line_start":60,"line_end":67,"column_start":1,"column_end":3,"is_primary":false,"text":[{"text":"macro_rules! char_between(","highlight_start":1,"highlight_end":27},{"text":"    ($input:expr, $min:expr, $max:expr) => (","highlight_start":1,"highlight_end":45},{"text":"        {","highlight_start":1,"highlight_end":10},{"text":"        fn f(c: u8) -> bool { c >= ($min as u8) && c <= ($max as u8)}","highlight_start":1,"highlight_end":70},{"text":"        flat_map!($input, take!(1), check!(f))","highlight_start":1,"highlight_end":47},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    );","highlight_start":1,"highlight_end":7},{"text":");","highlight_start":1,"highlight_end":3}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"flat_map!","def_site_span":{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.2.3/src/simple_errors.rs","byte_start":5500,"byte_end":5521,"line_start":176,"line_end":176,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! flat_map(","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"flat_map!","def_site_span":{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.2.3/src/simple_errors.rs","byte_start":5500,"byte_end":5521,"line_start":176,"line_end":176,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! flat_map(","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"check!","def_site_span":{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/iso8601-0.3.0/src/parsers.rs","byte_start":1064,"byte_end":1561,"line_start":37,"line_end":58,"column_start":1,"column_end":3,"is_primary":false,"text":[{"text":"macro_rules! check(","highlight_start":1,"highlight_end":20},{"text":"  ($input:expr, $submac:ident!( $($args:tt)* )) => (","highlight_start":1,"highlight_end":53},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    {","highlight_start":1,"highlight_end":6},{"text":"      let mut failed = false;","highlight_start":1,"highlight_end":30},{"text":"      for &idx in $input.0 {","highlight_start":1,"highlight_end":29},{"text":"        if !$submac!(idx, $($args)*) {","highlight_start":1,"highlight_end":39},{"text":"            failed = true;","highlight_start":1,"highlight_end":27},{"text":"            break;","highlight_start":1,"highlight_end":19},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"      }","highlight_start":1,"highlight_end":8},{"text":"      if failed {","highlight_start":1,"highlight_end":18},{"text":"        Err(nom::Err::Error(error_position!($input, nom::ErrorKind::Custom(20u32))))","highlight_start":1,"highlight_end":85},{"text":"      } else {","highlight_start":1,"highlight_end":15},{"text":"        Ok((CompleteByteSlice(&b\"\"[..]), $input))","highlight_start":1,"highlight_end":50},{"text":"      }","highlight_start":1,"highlight_end":8},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"  );","highlight_start":1,"highlight_end":5},{"text":"  ($input:expr, $f:expr) => (","highlight_start":1,"highlight_end":30},{"text":"    check!($input, call!($f));","highlight_start":1,"highlight_end":31},{"text":"  );","highlight_start":1,"highlight_end":5},{"text":");","highlight_start":1,"highlight_end":3}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"macro invocations at the end of a block are treated as expressions","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"to ignore the value produced by the macro, add a semicolon after the invocation of `check`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"`#[allow(semicolon_in_expressions_from_macros)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: trailing semicolon in macro used in expression position\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/iso8601-0.3.0/src/parsers.rs:56:30\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m56\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    check!($input, call!($f));\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                             \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m97\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mnamed!(week_three <CompleteByteSlice,u32>, do_parse!(tag!(\"3\") >> s:char_between!('0', '9') >> (30+buf_to_u32(s.0))\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m---------------------------------------------------------------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: macro invocations at the end of a block are treated as expressions\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: to ignore the value produced by the macro, add a semicolon after the invocation of `check`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[allow(semicolon_in_expressions_from_macros)]` on by default\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `check` which comes from the expansion of the macro `named` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}},{"diagnostic":{"message":"trailing semicolon in macro used in expression position","code":{"code":"semicolon_in_expressions_from_macros","explanation":null},"level":"warning","spans":[{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/iso8601-0.3.0/src/parsers.rs","byte_start":1552,"byte_end":1553,"line_start":56,"line_end":56,"column_start":30,"column_end":31,"is_primary":true,"text":[{"text":"    check!($input, call!($f));","highlight_start":30,"highlight_end":31}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.2.3/src/simple_errors.rs","byte_start":6253,"byte_end":6277,"line_start":195,"line_end":195,"column_start":15,"column_end":39,"is_primary":false,"text":[{"text":"        match $submac2!(o, $($args2)*) {","highlight_start":15,"highlight_end":39}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.2.3/src/simple_errors.rs","byte_start":5610,"byte_end":5674,"line_start":178,"line_end":178,"column_start":5,"column_end":69,"is_primary":false,"text":[{"text":"    flat_map!(__impl $i, $submac!($($args)*), $submac2!($($args2)*));","highlight_start":5,"highlight_end":69}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/iso8601-0.3.0/src/parsers.rs","byte_start":1723,"byte_end":1761,"line_start":64,"line_end":64,"column_start":9,"column_end":47,"is_primary":false,"text":[{"text":"        flat_map!($input, take!(1), check!(f))","highlight_start":9,"highlight_end":47}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.2.3/src/sequence.rs","byte_start":10503,"byte_end":10526,"line_start":366,"line_end":366,"column_start":14,"column_end":37,"is_primary":false,"text":[{"text":"      match  $submac!(i_, $($args)*) {","highlight_start":14,"highlight_end":37}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.2.3/src/sequence.rs","byte_start":10130,"byte_end":10161,"line_start":351,"line_end":351,"column_start":11,"column_end":42,"is_primary":false,"text":[{"text":"          do_parse!(__impl i_, $($rest)*)","highlight_start":11,"highlight_end":42}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.2.3/src/sequence.rs","byte_start":11854,"byte_end":11885,"line_start":421,"line_end":421,"column_start":7,"column_end":38,"is_primary":false,"text":[{"text":"      do_parse!(__impl $i, $($rest)*)","highlight_start":7,"highlight_end":38}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.2.3/src/macros.rs","byte_start":3282,"byte_end":3304,"line_start":114,"line_end":114,"column_start":13,"column_end":35,"is_primary":false,"text":[{"text":"            $submac!(i, $($args)*)","highlight_start":13,"highlight_end":35}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/iso8601-0.3.0/src/parsers.rs","byte_start":3308,"byte_end":3425,"line_start":98,"line_end":98,"column_start":1,"column_end":118,"is_primary":false,"text":[{"text":"named!(week_four  <CompleteByteSlice,u32>, do_parse!(tag!(\"4\") >> s:char_between!('0', '9') >> (40+buf_to_u32(s.0))));","highlight_start":1,"highlight_end":118}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"named!","def_site_span":{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.2.3/src/macros.rs","byte_start":2688,"byte_end":2706,"line_start":98,"line_end":98,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! named (","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"do_parse!","def_site_span":{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.2.3/src/sequence.rs","byte_start":8622,"byte_end":8643,"line_start":305,"line_end":305,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! do_parse (","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"do_parse!","def_site_span":{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.2.3/src/sequence.rs","byte_start":8622,"byte_end":8643,"line_start":305,"line_end":305,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! do_parse (","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"do_parse!","def_site_span":{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.2.3/src/sequence.rs","byte_start":8622,"byte_end":8643,"line_start":305,"line_end":305,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! do_parse (","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"char_between!","def_site_span":{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/iso8601-0.3.0/src/parsers.rs","byte_start":1563,"byte_end":1781,"line_start":60,"line_end":67,"column_start":1,"column_end":3,"is_primary":false,"text":[{"text":"macro_rules! char_between(","highlight_start":1,"highlight_end":27},{"text":"    ($input:expr, $min:expr, $max:expr) => (","highlight_start":1,"highlight_end":45},{"text":"        {","highlight_start":1,"highlight_end":10},{"text":"        fn f(c: u8) -> bool { c >= ($min as u8) && c <= ($max as u8)}","highlight_start":1,"highlight_end":70},{"text":"        flat_map!($input, take!(1), check!(f))","highlight_start":1,"highlight_end":47},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    );","highlight_start":1,"highlight_end":7},{"text":");","highlight_start":1,"highlight_end":3}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"flat_map!","def_site_span":{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.2.3/src/simple_errors.rs","byte_start":5500,"byte_end":5521,"line_start":176,"line_end":176,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! flat_map(","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"flat_map!","def_site_span":{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.2.3/src/simple_errors.rs","byte_start":5500,"byte_end":5521,"line_start":176,"line_end":176,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! flat_map(","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"check!","def_site_span":{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/iso8601-0.3.0/src/parsers.rs","byte_start":1064,"byte_end":1561,"line_start":37,"line_end":58,"column_start":1,"column_end":3,"is_primary":false,"text":[{"text":"macro_rules! check(","highlight_start":1,"highlight_end":20},{"text":"  ($input:expr, $submac:ident!( $($args:tt)* )) => (","highlight_start":1,"highlight_end":53},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    {","highlight_start":1,"highlight_end":6},{"text":"      let mut failed = false;","highlight_start":1,"highlight_end":30},{"text":"      for &idx in $input.0 {","highlight_start":1,"highlight_end":29},{"text":"        if !$submac!(idx, $($args)*) {","highlight_start":1,"highlight_end":39},{"text":"            failed = true;","highlight_start":1,"highlight_end":27},{"text":"            break;","highlight_start":1,"highlight_end":19},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"      }","highlight_start":1,"highlight_end":8},{"text":"      if failed {","highlight_start":1,"highlight_end":18},{"text":"        Err(nom::Err::Error(error_position!($input, nom::ErrorKind::Custom(20u32))))","highlight_start":1,"highlight_end":85},{"text":"      } else {","highlight_start":1,"highlight_end":15},{"text":"        Ok((CompleteByteSlice(&b\"\"[..]), $input))","highlight_start":1,"highlight_end":50},{"text":"      }","highlight_start":1,"highlight_end":8},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"  );","highlight_start":1,"highlight_end":5},{"text":"  ($input:expr, $f:expr) => (","highlight_start":1,"highlight_end":30},{"text":"    check!($input, call!($f));","highlight_start":1,"highlight_end":31},{"text":"  );","highlight_start":1,"highlight_end":5},{"text":");","highlight_start":1,"highlight_end":3}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"macro invocations at the end of a block are treated as expressions","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"to ignore the value produced by the macro, add a semicolon after the invocation of `check`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"`#[allow(semicolon_in_expressions_from_macros)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: trailing semicolon in macro used in expression position\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/iso8601-0.3.0/src/parsers.rs:56:30\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m56\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    check!($input, call!($f));\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                             \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m98\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mnamed!(week_four  <CompleteByteSlice,u32>, do_parse!(tag!(\"4\") >> s:char_between!('0', '9') >> (40+buf_to_u32(s.0))\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m---------------------------------------------------------------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: macro invocations at the end of a block are treated as expressions\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: to ignore the value produced by the macro, add a semicolon after the invocation of `check`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[allow(semicolon_in_expressions_from_macros)]` on by default\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `check` which comes from the expansion of the macro `named` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}},{"diagnostic":{"message":"trailing semicolon in macro used in expression position","code":{"code":"semicolon_in_expressions_from_macros","explanation":null},"level":"warning","spans":[{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/iso8601-0.3.0/src/parsers.rs","byte_start":1552,"byte_end":1553,"line_start":56,"line_end":56,"column_start":30,"column_end":31,"is_primary":true,"text":[{"text":"    check!($input, call!($f));","highlight_start":30,"highlight_end":31}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.2.3/src/simple_errors.rs","byte_start":6253,"byte_end":6277,"line_start":195,"line_end":195,"column_start":15,"column_end":39,"is_primary":false,"text":[{"text":"        match $submac2!(o, $($args2)*) {","highlight_start":15,"highlight_end":39}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.2.3/src/simple_errors.rs","byte_start":5610,"byte_end":5674,"line_start":178,"line_end":178,"column_start":5,"column_end":69,"is_primary":false,"text":[{"text":"    flat_map!(__impl $i, $submac!($($args)*), $submac2!($($args2)*));","highlight_start":5,"highlight_end":69}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/iso8601-0.3.0/src/parsers.rs","byte_start":1723,"byte_end":1761,"line_start":64,"line_end":64,"column_start":9,"column_end":47,"is_primary":false,"text":[{"text":"        flat_map!($input, take!(1), check!(f))","highlight_start":9,"highlight_end":47}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.2.3/src/sequence.rs","byte_start":10503,"byte_end":10526,"line_start":366,"line_end":366,"column_start":14,"column_end":37,"is_primary":false,"text":[{"text":"      match  $submac!(i_, $($args)*) {","highlight_start":14,"highlight_end":37}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.2.3/src/sequence.rs","byte_start":10130,"byte_end":10161,"line_start":351,"line_end":351,"column_start":11,"column_end":42,"is_primary":false,"text":[{"text":"          do_parse!(__impl i_, $($rest)*)","highlight_start":11,"highlight_end":42}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.2.3/src/sequence.rs","byte_start":11854,"byte_end":11885,"line_start":421,"line_end":421,"column_start":7,"column_end":38,"is_primary":false,"text":[{"text":"      do_parse!(__impl $i, $($rest)*)","highlight_start":7,"highlight_end":38}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.2.3/src/macros.rs","byte_start":3282,"byte_end":3304,"line_start":114,"line_end":114,"column_start":13,"column_end":35,"is_primary":false,"text":[{"text":"            $submac!(i, $($args)*)","highlight_start":13,"highlight_end":35}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/iso8601-0.3.0/src/parsers.rs","byte_start":3427,"byte_end":3544,"line_start":99,"line_end":99,"column_start":1,"column_end":118,"is_primary":false,"text":[{"text":"named!(week_five  <CompleteByteSlice,u32>, do_parse!(tag!(\"5\") >> s:char_between!('0', '3') >> (50+buf_to_u32(s.0))));","highlight_start":1,"highlight_end":118}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"named!","def_site_span":{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.2.3/src/macros.rs","byte_start":2688,"byte_end":2706,"line_start":98,"line_end":98,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! named (","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"do_parse!","def_site_span":{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.2.3/src/sequence.rs","byte_start":8622,"byte_end":8643,"line_start":305,"line_end":305,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! do_parse (","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"do_parse!","def_site_span":{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.2.3/src/sequence.rs","byte_start":8622,"byte_end":8643,"line_start":305,"line_end":305,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! do_parse (","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"do_parse!","def_site_span":{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.2.3/src/sequence.rs","byte_start":8622,"byte_end":8643,"line_start":305,"line_end":305,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! do_parse (","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"char_between!","def_site_span":{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/iso8601-0.3.0/src/parsers.rs","byte_start":1563,"byte_end":1781,"line_start":60,"line_end":67,"column_start":1,"column_end":3,"is_primary":false,"text":[{"text":"macro_rules! char_between(","highlight_start":1,"highlight_end":27},{"text":"    ($input:expr, $min:expr, $max:expr) => (","highlight_start":1,"highlight_end":45},{"text":"        {","highlight_start":1,"highlight_end":10},{"text":"        fn f(c: u8) -> bool { c >= ($min as u8) && c <= ($max as u8)}","highlight_start":1,"highlight_end":70},{"text":"        flat_map!($input, take!(1), check!(f))","highlight_start":1,"highlight_end":47},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    );","highlight_start":1,"highlight_end":7},{"text":");","highlight_start":1,"highlight_end":3}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"flat_map!","def_site_span":{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.2.3/src/simple_errors.rs","byte_start":5500,"byte_end":5521,"line_start":176,"line_end":176,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! flat_map(","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"flat_map!","def_site_span":{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.2.3/src/simple_errors.rs","byte_start":5500,"byte_end":5521,"line_start":176,"line_end":176,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! flat_map(","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"check!","def_site_span":{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/iso8601-0.3.0/src/parsers.rs","byte_start":1064,"byte_end":1561,"line_start":37,"line_end":58,"column_start":1,"column_end":3,"is_primary":false,"text":[{"text":"macro_rules! check(","highlight_start":1,"highlight_end":20},{"text":"  ($input:expr, $submac:ident!( $($args:tt)* )) => (","highlight_start":1,"highlight_end":53},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    {","highlight_start":1,"highlight_end":6},{"text":"      let mut failed = false;","highlight_start":1,"highlight_end":30},{"text":"      for &idx in $input.0 {","highlight_start":1,"highlight_end":29},{"text":"        if !$submac!(idx, $($args)*) {","highlight_start":1,"highlight_end":39},{"text":"            failed = true;","highlight_start":1,"highlight_end":27},{"text":"            break;","highlight_start":1,"highlight_end":19},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"      }","highlight_start":1,"highlight_end":8},{"text":"      if failed {","highlight_start":1,"highlight_end":18},{"text":"        Err(nom::Err::Error(error_position!($input, nom::ErrorKind::Custom(20u32))))","highlight_start":1,"highlight_end":85},{"text":"      } else {","highlight_start":1,"highlight_end":15},{"text":"        Ok((CompleteByteSlice(&b\"\"[..]), $input))","highlight_start":1,"highlight_end":50},{"text":"      }","highlight_start":1,"highlight_end":8},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"  );","highlight_start":1,"highlight_end":5},{"text":"  ($input:expr, $f:expr) => (","highlight_start":1,"highlight_end":30},{"text":"    check!($input, call!($f));","highlight_start":1,"highlight_end":31},{"text":"  );","highlight_start":1,"highlight_end":5},{"text":");","highlight_start":1,"highlight_end":3}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"macro invocations at the end of a block are treated as expressions","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"to ignore the value produced by the macro, add a semicolon after the invocation of `check`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"`#[allow(semicolon_in_expressions_from_macros)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: trailing semicolon in macro used in expression position\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/iso8601-0.3.0/src/parsers.rs:56:30\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m56\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    check!($input, call!($f));\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                             \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m99\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mnamed!(week_five  <CompleteByteSlice,u32>, do_parse!(tag!(\"5\") >> s:char_between!('0', '3') >> (50+buf_to_u32(s.0))\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m---------------------------------------------------------------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: macro invocations at the end of a block are treated as expressions\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: to ignore the value produced by the macro, add a semicolon after the invocation of `check`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[allow(semicolon_in_expressions_from_macros)]` on by default\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `check` which comes from the expansion of the macro `named` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}},{"diagnostic":{"message":"trailing semicolon in macro used in expression position","code":{"code":"semicolon_in_expressions_from_macros","explanation":null},"level":"warning","spans":[{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/iso8601-0.3.0/src/parsers.rs","byte_start":1552,"byte_end":1553,"line_start":56,"line_end":56,"column_start":30,"column_end":31,"is_primary":true,"text":[{"text":"    check!($input, call!($f));","highlight_start":30,"highlight_end":31}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.2.3/src/simple_errors.rs","byte_start":6253,"byte_end":6277,"line_start":195,"line_end":195,"column_start":15,"column_end":39,"is_primary":false,"text":[{"text":"        match $submac2!(o, $($args2)*) {","highlight_start":15,"highlight_end":39}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.2.3/src/simple_errors.rs","byte_start":5610,"byte_end":5674,"line_start":178,"line_end":178,"column_start":5,"column_end":69,"is_primary":false,"text":[{"text":"    flat_map!(__impl $i, $submac!($($args)*), $submac2!($($args2)*));","highlight_start":5,"highlight_end":69}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/iso8601-0.3.0/src/parsers.rs","byte_start":1723,"byte_end":1761,"line_start":64,"line_end":64,"column_start":9,"column_end":47,"is_primary":false,"text":[{"text":"        flat_map!($input, take!(1), check!(f))","highlight_start":9,"highlight_end":47}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.2.3/src/macros.rs","byte_start":22544,"byte_end":22567,"line_start":657,"line_end":657,"column_start":8,"column_end":31,"is_primary":false,"text":[{"text":"      ($submac!($i, $($args)*)).map(|(i,o)| {","highlight_start":8,"highlight_end":31}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.2.3/src/macros.rs","byte_start":22692,"byte_end":22732,"line_start":663,"line_end":663,"column_start":5,"column_end":45,"is_primary":false,"text":[{"text":"    map!(__impl $i, $submac!($($args)*), $g);","highlight_start":5,"highlight_end":45}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.2.3/src/macros.rs","byte_start":3282,"byte_end":3304,"line_start":114,"line_end":114,"column_start":13,"column_end":35,"is_primary":false,"text":[{"text":"            $submac!(i, $($args)*)","highlight_start":13,"highlight_end":35}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/iso8601-0.3.0/src/parsers.rs","byte_start":3658,"byte_end":3751,"line_start":102,"line_end":102,"column_start":1,"column_end":94,"is_primary":false,"text":[{"text":"named!(week_day <CompleteByteSlice,u32>, map!(char_between!('1', '7') , |s| buf_to_u32(s.0)));","highlight_start":1,"highlight_end":94}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"named!","def_site_span":{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.2.3/src/macros.rs","byte_start":2688,"byte_end":2706,"line_start":98,"line_end":98,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! named (","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"map!","def_site_span":{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.2.3/src/macros.rs","byte_start":22321,"byte_end":22337,"line_start":649,"line_end":649,"column_start":1,"column_end":17,"is_primary":false,"text":[{"text":"macro_rules! map(","highlight_start":1,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"map!","def_site_span":{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.2.3/src/macros.rs","byte_start":22321,"byte_end":22337,"line_start":649,"line_end":649,"column_start":1,"column_end":17,"is_primary":false,"text":[{"text":"macro_rules! map(","highlight_start":1,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"char_between!","def_site_span":{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/iso8601-0.3.0/src/parsers.rs","byte_start":1563,"byte_end":1781,"line_start":60,"line_end":67,"column_start":1,"column_end":3,"is_primary":false,"text":[{"text":"macro_rules! char_between(","highlight_start":1,"highlight_end":27},{"text":"    ($input:expr, $min:expr, $max:expr) => (","highlight_start":1,"highlight_end":45},{"text":"        {","highlight_start":1,"highlight_end":10},{"text":"        fn f(c: u8) -> bool { c >= ($min as u8) && c <= ($max as u8)}","highlight_start":1,"highlight_end":70},{"text":"        flat_map!($input, take!(1), check!(f))","highlight_start":1,"highlight_end":47},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    );","highlight_start":1,"highlight_end":7},{"text":");","highlight_start":1,"highlight_end":3}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"flat_map!","def_site_span":{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.2.3/src/simple_errors.rs","byte_start":5500,"byte_end":5521,"line_start":176,"line_end":176,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! flat_map(","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"flat_map!","def_site_span":{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.2.3/src/simple_errors.rs","byte_start":5500,"byte_end":5521,"line_start":176,"line_end":176,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! flat_map(","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"check!","def_site_span":{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/iso8601-0.3.0/src/parsers.rs","byte_start":1064,"byte_end":1561,"line_start":37,"line_end":58,"column_start":1,"column_end":3,"is_primary":false,"text":[{"text":"macro_rules! check(","highlight_start":1,"highlight_end":20},{"text":"  ($input:expr, $submac:ident!( $($args:tt)* )) => (","highlight_start":1,"highlight_end":53},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    {","highlight_start":1,"highlight_end":6},{"text":"      let mut failed = false;","highlight_start":1,"highlight_end":30},{"text":"      for &idx in $input.0 {","highlight_start":1,"highlight_end":29},{"text":"        if !$submac!(idx, $($args)*) {","highlight_start":1,"highlight_end":39},{"text":"            failed = true;","highlight_start":1,"highlight_end":27},{"text":"            break;","highlight_start":1,"highlight_end":19},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"      }","highlight_start":1,"highlight_end":8},{"text":"      if failed {","highlight_start":1,"highlight_end":18},{"text":"        Err(nom::Err::Error(error_position!($input, nom::ErrorKind::Custom(20u32))))","highlight_start":1,"highlight_end":85},{"text":"      } else {","highlight_start":1,"highlight_end":15},{"text":"        Ok((CompleteByteSlice(&b\"\"[..]), $input))","highlight_start":1,"highlight_end":50},{"text":"      }","highlight_start":1,"highlight_end":8},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"  );","highlight_start":1,"highlight_end":5},{"text":"  ($input:expr, $f:expr) => (","highlight_start":1,"highlight_end":30},{"text":"    check!($input, call!($f));","highlight_start":1,"highlight_end":31},{"text":"  );","highlight_start":1,"highlight_end":5},{"text":");","highlight_start":1,"highlight_end":3}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"macro invocations at the end of a block are treated as expressions","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"to ignore the value produced by the macro, add a semicolon after the invocation of `check`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"`#[allow(semicolon_in_expressions_from_macros)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: trailing semicolon in macro used in expression position\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/iso8601-0.3.0/src/parsers.rs:56:30\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m56\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    check!($input, call!($f));\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                             \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m102\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mnamed!(week_day <CompleteByteSlice,u32>, map!(char_between!('1', '7') , |s| buf_to_u32(s.0)));\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m---------------------------------------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: macro invocations at the end of a block are treated as expressions\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: to ignore the value produced by the macro, add a semicolon after the invocation of `check`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[allow(semicolon_in_expressions_from_macros)]` on by default\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `check` which comes from the expansion of the macro `named` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}},{"diagnostic":{"message":"trailing semicolon in macro used in expression position","code":{"code":"semicolon_in_expressions_from_macros","explanation":null},"level":"warning","spans":[{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/iso8601-0.3.0/src/parsers.rs","byte_start":1552,"byte_end":1553,"line_start":56,"line_end":56,"column_start":30,"column_end":31,"is_primary":true,"text":[{"text":"    check!($input, call!($f));","highlight_start":30,"highlight_end":31}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.2.3/src/simple_errors.rs","byte_start":6253,"byte_end":6277,"line_start":195,"line_end":195,"column_start":15,"column_end":39,"is_primary":false,"text":[{"text":"        match $submac2!(o, $($args2)*) {","highlight_start":15,"highlight_end":39}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.2.3/src/simple_errors.rs","byte_start":5610,"byte_end":5674,"line_start":178,"line_end":178,"column_start":5,"column_end":69,"is_primary":false,"text":[{"text":"    flat_map!(__impl $i, $submac!($($args)*), $submac2!($($args2)*));","highlight_start":5,"highlight_end":69}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/iso8601-0.3.0/src/parsers.rs","byte_start":1723,"byte_end":1761,"line_start":64,"line_end":64,"column_start":9,"column_end":47,"is_primary":false,"text":[{"text":"        flat_map!($input, take!(1), check!(f))","highlight_start":9,"highlight_end":47}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.2.3/src/sequence.rs","byte_start":10503,"byte_end":10526,"line_start":366,"line_end":366,"column_start":14,"column_end":37,"is_primary":false,"text":[{"text":"      match  $submac!(i_, $($args)*) {","highlight_start":14,"highlight_end":37}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.2.3/src/sequence.rs","byte_start":11854,"byte_end":11885,"line_start":421,"line_end":421,"column_start":7,"column_end":38,"is_primary":false,"text":[{"text":"      do_parse!(__impl $i, $($rest)*)","highlight_start":7,"highlight_end":38}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.2.3/src/macros.rs","byte_start":3282,"byte_end":3304,"line_start":114,"line_end":114,"column_start":13,"column_end":35,"is_primary":false,"text":[{"text":"            $submac!(i, $($args)*)","highlight_start":13,"highlight_end":35}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/iso8601-0.3.0/src/parsers.rs","byte_start":3769,"byte_end":4009,"line_start":105,"line_end":110,"column_start":1,"column_end":11,"is_primary":false,"text":[{"text":"named!(ord_day <CompleteByteSlice,u32>, do_parse!(","highlight_start":1,"highlight_end":51},{"text":"        a:char_between!('0','3') >>","highlight_start":1,"highlight_end":36},{"text":"        b:char_between!('0','9') >>","highlight_start":1,"highlight_end":36},{"text":"        c:char_between!('0','9') >>","highlight_start":1,"highlight_end":36},{"text":"        ( buf_to_u32(a.0)*100 + buf_to_u32(b.0)*10 + buf_to_u32(c.0) )","highlight_start":1,"highlight_end":71},{"text":"        ));","highlight_start":1,"highlight_end":11}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"named!","def_site_span":{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.2.3/src/macros.rs","byte_start":2688,"byte_end":2706,"line_start":98,"line_end":98,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! named (","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"do_parse!","def_site_span":{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.2.3/src/sequence.rs","byte_start":8622,"byte_end":8643,"line_start":305,"line_end":305,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! do_parse (","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"do_parse!","def_site_span":{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.2.3/src/sequence.rs","byte_start":8622,"byte_end":8643,"line_start":305,"line_end":305,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! do_parse (","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"char_between!","def_site_span":{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/iso8601-0.3.0/src/parsers.rs","byte_start":1563,"byte_end":1781,"line_start":60,"line_end":67,"column_start":1,"column_end":3,"is_primary":false,"text":[{"text":"macro_rules! char_between(","highlight_start":1,"highlight_end":27},{"text":"    ($input:expr, $min:expr, $max:expr) => (","highlight_start":1,"highlight_end":45},{"text":"        {","highlight_start":1,"highlight_end":10},{"text":"        fn f(c: u8) -> bool { c >= ($min as u8) && c <= ($max as u8)}","highlight_start":1,"highlight_end":70},{"text":"        flat_map!($input, take!(1), check!(f))","highlight_start":1,"highlight_end":47},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    );","highlight_start":1,"highlight_end":7},{"text":");","highlight_start":1,"highlight_end":3}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"flat_map!","def_site_span":{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.2.3/src/simple_errors.rs","byte_start":5500,"byte_end":5521,"line_start":176,"line_end":176,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! flat_map(","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"flat_map!","def_site_span":{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.2.3/src/simple_errors.rs","byte_start":5500,"byte_end":5521,"line_start":176,"line_end":176,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! flat_map(","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"check!","def_site_span":{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/iso8601-0.3.0/src/parsers.rs","byte_start":1064,"byte_end":1561,"line_start":37,"line_end":58,"column_start":1,"column_end":3,"is_primary":false,"text":[{"text":"macro_rules! check(","highlight_start":1,"highlight_end":20},{"text":"  ($input:expr, $submac:ident!( $($args:tt)* )) => (","highlight_start":1,"highlight_end":53},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    {","highlight_start":1,"highlight_end":6},{"text":"      let mut failed = false;","highlight_start":1,"highlight_end":30},{"text":"      for &idx in $input.0 {","highlight_start":1,"highlight_end":29},{"text":"        if !$submac!(idx, $($args)*) {","highlight_start":1,"highlight_end":39},{"text":"            failed = true;","highlight_start":1,"highlight_end":27},{"text":"            break;","highlight_start":1,"highlight_end":19},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"      }","highlight_start":1,"highlight_end":8},{"text":"      if failed {","highlight_start":1,"highlight_end":18},{"text":"        Err(nom::Err::Error(error_position!($input, nom::ErrorKind::Custom(20u32))))","highlight_start":1,"highlight_end":85},{"text":"      } else {","highlight_start":1,"highlight_end":15},{"text":"        Ok((CompleteByteSlice(&b\"\"[..]), $input))","highlight_start":1,"highlight_end":50},{"text":"      }","highlight_start":1,"highlight_end":8},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"  );","highlight_start":1,"highlight_end":5},{"text":"  ($input:expr, $f:expr) => (","highlight_start":1,"highlight_end":30},{"text":"    check!($input, call!($f));","highlight_start":1,"highlight_end":31},{"text":"  );","highlight_start":1,"highlight_end":5},{"text":");","highlight_start":1,"highlight_end":3}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"macro invocations at the end of a block are treated as expressions","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"to ignore the value produced by the macro, add a semicolon after the invocation of `check`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"`#[allow(semicolon_in_expressions_from_macros)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: trailing semicolon in macro used in expression position\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/iso8601-0.3.0/src/parsers.rs:56:30\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m56\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m    check!($input, call!($f));\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                               \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m105\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m/\u001b[0m\u001b[0m \u001b[0m\u001b[0mnamed!(ord_day <CompleteByteSlice,u32>, do_parse!(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m106\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        a:char_between!('0','3') >>\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m107\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        b:char_between!('0','9') >>\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m108\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        c:char_between!('0','9') >>\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m109\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        ( buf_to_u32(a.0)*100 + buf_to_u32(b.0)*10 + buf_to_u32(c.0) )\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m110\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        ));\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|__________-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: macro invocations at the end of a block are treated as expressions\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: to ignore the value produced by the macro, add a semicolon after the invocation of `check`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[allow(semicolon_in_expressions_from_macros)]` on by default\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `check` which comes from the expansion of the macro `named` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}},{"diagnostic":{"message":"trailing semicolon in macro used in expression position","code":{"code":"semicolon_in_expressions_from_macros","explanation":null},"level":"warning","spans":[{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/iso8601-0.3.0/src/parsers.rs","byte_start":1552,"byte_end":1553,"line_start":56,"line_end":56,"column_start":30,"column_end":31,"is_primary":true,"text":[{"text":"    check!($input, call!($f));","highlight_start":30,"highlight_end":31}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.2.3/src/simple_errors.rs","byte_start":6253,"byte_end":6277,"line_start":195,"line_end":195,"column_start":15,"column_end":39,"is_primary":false,"text":[{"text":"        match $submac2!(o, $($args2)*) {","highlight_start":15,"highlight_end":39}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.2.3/src/simple_errors.rs","byte_start":5610,"byte_end":5674,"line_start":178,"line_end":178,"column_start":5,"column_end":69,"is_primary":false,"text":[{"text":"    flat_map!(__impl $i, $submac!($($args)*), $submac2!($($args2)*));","highlight_start":5,"highlight_end":69}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/iso8601-0.3.0/src/parsers.rs","byte_start":1723,"byte_end":1761,"line_start":64,"line_end":64,"column_start":9,"column_end":47,"is_primary":false,"text":[{"text":"        flat_map!($input, take!(1), check!(f))","highlight_start":9,"highlight_end":47}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.2.3/src/sequence.rs","byte_start":10503,"byte_end":10526,"line_start":366,"line_end":366,"column_start":14,"column_end":37,"is_primary":false,"text":[{"text":"      match  $submac!(i_, $($args)*) {","highlight_start":14,"highlight_end":37}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.2.3/src/sequence.rs","byte_start":10648,"byte_end":10679,"line_start":371,"line_end":371,"column_start":11,"column_end":42,"is_primary":false,"text":[{"text":"          do_parse!(__impl i_, $($rest)*)","highlight_start":11,"highlight_end":42}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.2.3/src/sequence.rs","byte_start":11854,"byte_end":11885,"line_start":421,"line_end":421,"column_start":7,"column_end":38,"is_primary":false,"text":[{"text":"      do_parse!(__impl $i, $($rest)*)","highlight_start":7,"highlight_end":38}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.2.3/src/macros.rs","byte_start":3282,"byte_end":3304,"line_start":114,"line_end":114,"column_start":13,"column_end":35,"is_primary":false,"text":[{"text":"            $submac!(i, $($args)*)","highlight_start":13,"highlight_end":35}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/iso8601-0.3.0/src/parsers.rs","byte_start":3769,"byte_end":4009,"line_start":105,"line_end":110,"column_start":1,"column_end":11,"is_primary":false,"text":[{"text":"named!(ord_day <CompleteByteSlice,u32>, do_parse!(","highlight_start":1,"highlight_end":51},{"text":"        a:char_between!('0','3') >>","highlight_start":1,"highlight_end":36},{"text":"        b:char_between!('0','9') >>","highlight_start":1,"highlight_end":36},{"text":"        c:char_between!('0','9') >>","highlight_start":1,"highlight_end":36},{"text":"        ( buf_to_u32(a.0)*100 + buf_to_u32(b.0)*10 + buf_to_u32(c.0) )","highlight_start":1,"highlight_end":71},{"text":"        ));","highlight_start":1,"highlight_end":11}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"named!","def_site_span":{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.2.3/src/macros.rs","byte_start":2688,"byte_end":2706,"line_start":98,"line_end":98,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! named (","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"do_parse!","def_site_span":{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.2.3/src/sequence.rs","byte_start":8622,"byte_end":8643,"line_start":305,"line_end":305,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! do_parse (","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"do_parse!","def_site_span":{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.2.3/src/sequence.rs","byte_start":8622,"byte_end":8643,"line_start":305,"line_end":305,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! do_parse (","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"do_parse!","def_site_span":{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.2.3/src/sequence.rs","byte_start":8622,"byte_end":8643,"line_start":305,"line_end":305,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! do_parse (","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"char_between!","def_site_span":{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/iso8601-0.3.0/src/parsers.rs","byte_start":1563,"byte_end":1781,"line_start":60,"line_end":67,"column_start":1,"column_end":3,"is_primary":false,"text":[{"text":"macro_rules! char_between(","highlight_start":1,"highlight_end":27},{"text":"    ($input:expr, $min:expr, $max:expr) => (","highlight_start":1,"highlight_end":45},{"text":"        {","highlight_start":1,"highlight_end":10},{"text":"        fn f(c: u8) -> bool { c >= ($min as u8) && c <= ($max as u8)}","highlight_start":1,"highlight_end":70},{"text":"        flat_map!($input, take!(1), check!(f))","highlight_start":1,"highlight_end":47},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    );","highlight_start":1,"highlight_end":7},{"text":");","highlight_start":1,"highlight_end":3}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"flat_map!","def_site_span":{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.2.3/src/simple_errors.rs","byte_start":5500,"byte_end":5521,"line_start":176,"line_end":176,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! flat_map(","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"flat_map!","def_site_span":{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.2.3/src/simple_errors.rs","byte_start":5500,"byte_end":5521,"line_start":176,"line_end":176,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! flat_map(","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"check!","def_site_span":{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/iso8601-0.3.0/src/parsers.rs","byte_start":1064,"byte_end":1561,"line_start":37,"line_end":58,"column_start":1,"column_end":3,"is_primary":false,"text":[{"text":"macro_rules! check(","highlight_start":1,"highlight_end":20},{"text":"  ($input:expr, $submac:ident!( $($args:tt)* )) => (","highlight_start":1,"highlight_end":53},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    {","highlight_start":1,"highlight_end":6},{"text":"      let mut failed = false;","highlight_start":1,"highlight_end":30},{"text":"      for &idx in $input.0 {","highlight_start":1,"highlight_end":29},{"text":"        if !$submac!(idx, $($args)*) {","highlight_start":1,"highlight_end":39},{"text":"            failed = true;","highlight_start":1,"highlight_end":27},{"text":"            break;","highlight_start":1,"highlight_end":19},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"      }","highlight_start":1,"highlight_end":8},{"text":"      if failed {","highlight_start":1,"highlight_end":18},{"text":"        Err(nom::Err::Error(error_position!($input, nom::ErrorKind::Custom(20u32))))","highlight_start":1,"highlight_end":85},{"text":"      } else {","highlight_start":1,"highlight_end":15},{"text":"        Ok((CompleteByteSlice(&b\"\"[..]), $input))","highlight_start":1,"highlight_end":50},{"text":"      }","highlight_start":1,"highlight_end":8},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"  );","highlight_start":1,"highlight_end":5},{"text":"  ($input:expr, $f:expr) => (","highlight_start":1,"highlight_end":30},{"text":"    check!($input, call!($f));","highlight_start":1,"highlight_end":31},{"text":"  );","highlight_start":1,"highlight_end":5},{"text":");","highlight_start":1,"highlight_end":3}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"macro invocations at the end of a block are treated as expressions","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"to ignore the value produced by the macro, add a semicolon after the invocation of `check`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"`#[allow(semicolon_in_expressions_from_macros)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: trailing semicolon in macro used in expression position\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/iso8601-0.3.0/src/parsers.rs:56:30\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m56\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m    check!($input, call!($f));\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                               \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m105\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m/\u001b[0m\u001b[0m \u001b[0m\u001b[0mnamed!(ord_day <CompleteByteSlice,u32>, do_parse!(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m106\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        a:char_between!('0','3') >>\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m107\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        b:char_between!('0','9') >>\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m108\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        c:char_between!('0','9') >>\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m109\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        ( buf_to_u32(a.0)*100 + buf_to_u32(b.0)*10 + buf_to_u32(c.0) )\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m110\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        ));\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|__________-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: macro invocations at the end of a block are treated as expressions\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: to ignore the value produced by the macro, add a semicolon after the invocation of `check`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[allow(semicolon_in_expressions_from_macros)]` on by default\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `check` which comes from the expansion of the macro `named` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}},{"diagnostic":{"message":"trailing semicolon in macro used in expression position","code":{"code":"semicolon_in_expressions_from_macros","explanation":null},"level":"warning","spans":[{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/iso8601-0.3.0/src/parsers.rs","byte_start":1552,"byte_end":1553,"line_start":56,"line_end":56,"column_start":30,"column_end":31,"is_primary":true,"text":[{"text":"    check!($input, call!($f));","highlight_start":30,"highlight_end":31}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.2.3/src/simple_errors.rs","byte_start":6253,"byte_end":6277,"line_start":195,"line_end":195,"column_start":15,"column_end":39,"is_primary":false,"text":[{"text":"        match $submac2!(o, $($args2)*) {","highlight_start":15,"highlight_end":39}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.2.3/src/simple_errors.rs","byte_start":5610,"byte_end":5674,"line_start":178,"line_end":178,"column_start":5,"column_end":69,"is_primary":false,"text":[{"text":"    flat_map!(__impl $i, $submac!($($args)*), $submac2!($($args2)*));","highlight_start":5,"highlight_end":69}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/iso8601-0.3.0/src/parsers.rs","byte_start":1723,"byte_end":1761,"line_start":64,"line_end":64,"column_start":9,"column_end":47,"is_primary":false,"text":[{"text":"        flat_map!($input, take!(1), check!(f))","highlight_start":9,"highlight_end":47}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.2.3/src/sequence.rs","byte_start":10503,"byte_end":10526,"line_start":366,"line_end":366,"column_start":14,"column_end":37,"is_primary":false,"text":[{"text":"      match  $submac!(i_, $($args)*) {","highlight_start":14,"highlight_end":37}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.2.3/src/sequence.rs","byte_start":10648,"byte_end":10679,"line_start":371,"line_end":371,"column_start":11,"column_end":42,"is_primary":false,"text":[{"text":"          do_parse!(__impl i_, $($rest)*)","highlight_start":11,"highlight_end":42}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.2.3/src/sequence.rs","byte_start":10648,"byte_end":10679,"line_start":371,"line_end":371,"column_start":11,"column_end":42,"is_primary":false,"text":[{"text":"          do_parse!(__impl i_, $($rest)*)","highlight_start":11,"highlight_end":42}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.2.3/src/sequence.rs","byte_start":11854,"byte_end":11885,"line_start":421,"line_end":421,"column_start":7,"column_end":38,"is_primary":false,"text":[{"text":"      do_parse!(__impl $i, $($rest)*)","highlight_start":7,"highlight_end":38}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.2.3/src/macros.rs","byte_start":3282,"byte_end":3304,"line_start":114,"line_end":114,"column_start":13,"column_end":35,"is_primary":false,"text":[{"text":"            $submac!(i, $($args)*)","highlight_start":13,"highlight_end":35}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/iso8601-0.3.0/src/parsers.rs","byte_start":3769,"byte_end":4009,"line_start":105,"line_end":110,"column_start":1,"column_end":11,"is_primary":false,"text":[{"text":"named!(ord_day <CompleteByteSlice,u32>, do_parse!(","highlight_start":1,"highlight_end":51},{"text":"        a:char_between!('0','3') >>","highlight_start":1,"highlight_end":36},{"text":"        b:char_between!('0','9') >>","highlight_start":1,"highlight_end":36},{"text":"        c:char_between!('0','9') >>","highlight_start":1,"highlight_end":36},{"text":"        ( buf_to_u32(a.0)*100 + buf_to_u32(b.0)*10 + buf_to_u32(c.0) )","highlight_start":1,"highlight_end":71},{"text":"        ));","highlight_start":1,"highlight_end":11}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"named!","def_site_span":{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.2.3/src/macros.rs","byte_start":2688,"byte_end":2706,"line_start":98,"line_end":98,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! named (","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"do_parse!","def_site_span":{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.2.3/src/sequence.rs","byte_start":8622,"byte_end":8643,"line_start":305,"line_end":305,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! do_parse (","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"do_parse!","def_site_span":{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.2.3/src/sequence.rs","byte_start":8622,"byte_end":8643,"line_start":305,"line_end":305,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! do_parse (","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"do_parse!","def_site_span":{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.2.3/src/sequence.rs","byte_start":8622,"byte_end":8643,"line_start":305,"line_end":305,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! do_parse (","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"do_parse!","def_site_span":{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.2.3/src/sequence.rs","byte_start":8622,"byte_end":8643,"line_start":305,"line_end":305,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! do_parse (","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"char_between!","def_site_span":{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/iso8601-0.3.0/src/parsers.rs","byte_start":1563,"byte_end":1781,"line_start":60,"line_end":67,"column_start":1,"column_end":3,"is_primary":false,"text":[{"text":"macro_rules! char_between(","highlight_start":1,"highlight_end":27},{"text":"    ($input:expr, $min:expr, $max:expr) => (","highlight_start":1,"highlight_end":45},{"text":"        {","highlight_start":1,"highlight_end":10},{"text":"        fn f(c: u8) -> bool { c >= ($min as u8) && c <= ($max as u8)}","highlight_start":1,"highlight_end":70},{"text":"        flat_map!($input, take!(1), check!(f))","highlight_start":1,"highlight_end":47},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    );","highlight_start":1,"highlight_end":7},{"text":");","highlight_start":1,"highlight_end":3}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"flat_map!","def_site_span":{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.2.3/src/simple_errors.rs","byte_start":5500,"byte_end":5521,"line_start":176,"line_end":176,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! flat_map(","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"flat_map!","def_site_span":{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.2.3/src/simple_errors.rs","byte_start":5500,"byte_end":5521,"line_start":176,"line_end":176,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! flat_map(","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"check!","def_site_span":{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/iso8601-0.3.0/src/parsers.rs","byte_start":1064,"byte_end":1561,"line_start":37,"line_end":58,"column_start":1,"column_end":3,"is_primary":false,"text":[{"text":"macro_rules! check(","highlight_start":1,"highlight_end":20},{"text":"  ($input:expr, $submac:ident!( $($args:tt)* )) => (","highlight_start":1,"highlight_end":53},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    {","highlight_start":1,"highlight_end":6},{"text":"      let mut failed = false;","highlight_start":1,"highlight_end":30},{"text":"      for &idx in $input.0 {","highlight_start":1,"highlight_end":29},{"text":"        if !$submac!(idx, $($args)*) {","highlight_start":1,"highlight_end":39},{"text":"            failed = true;","highlight_start":1,"highlight_end":27},{"text":"            break;","highlight_start":1,"highlight_end":19},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"      }","highlight_start":1,"highlight_end":8},{"text":"      if failed {","highlight_start":1,"highlight_end":18},{"text":"        Err(nom::Err::Error(error_position!($input, nom::ErrorKind::Custom(20u32))))","highlight_start":1,"highlight_end":85},{"text":"      } else {","highlight_start":1,"highlight_end":15},{"text":"        Ok((CompleteByteSlice(&b\"\"[..]), $input))","highlight_start":1,"highlight_end":50},{"text":"      }","highlight_start":1,"highlight_end":8},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"  );","highlight_start":1,"highlight_end":5},{"text":"  ($input:expr, $f:expr) => (","highlight_start":1,"highlight_end":30},{"text":"    check!($input, call!($f));","highlight_start":1,"highlight_end":31},{"text":"  );","highlight_start":1,"highlight_end":5},{"text":");","highlight_start":1,"highlight_end":3}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"macro invocations at the end of a block are treated as expressions","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"to ignore the value produced by the macro, add a semicolon after the invocation of `check`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"`#[allow(semicolon_in_expressions_from_macros)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: trailing semicolon in macro used in expression position\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/iso8601-0.3.0/src/parsers.rs:56:30\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m56\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m    check!($input, call!($f));\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                               \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m105\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m/\u001b[0m\u001b[0m \u001b[0m\u001b[0mnamed!(ord_day <CompleteByteSlice,u32>, do_parse!(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m106\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        a:char_between!('0','3') >>\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m107\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        b:char_between!('0','9') >>\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m108\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        c:char_between!('0','9') >>\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m109\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        ( buf_to_u32(a.0)*100 + buf_to_u32(b.0)*10 + buf_to_u32(c.0) )\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m110\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        ));\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|__________-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: macro invocations at the end of a block are treated as expressions\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: to ignore the value produced by the macro, add a semicolon after the invocation of `check`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[allow(semicolon_in_expressions_from_macros)]` on by default\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `check` which comes from the expansion of the macro `named` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}},{"diagnostic":{"message":"trailing semicolon in macro used in expression position","code":{"code":"semicolon_in_expressions_from_macros","explanation":null},"level":"warning","spans":[{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/iso8601-0.3.0/src/parsers.rs","byte_start":1552,"byte_end":1553,"line_start":56,"line_end":56,"column_start":30,"column_end":31,"is_primary":true,"text":[{"text":"    check!($input, call!($f));","highlight_start":30,"highlight_end":31}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.2.3/src/simple_errors.rs","byte_start":6253,"byte_end":6277,"line_start":195,"line_end":195,"column_start":15,"column_end":39,"is_primary":false,"text":[{"text":"        match $submac2!(o, $($args2)*) {","highlight_start":15,"highlight_end":39}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.2.3/src/simple_errors.rs","byte_start":5610,"byte_end":5674,"line_start":178,"line_end":178,"column_start":5,"column_end":69,"is_primary":false,"text":[{"text":"    flat_map!(__impl $i, $submac!($($args)*), $submac2!($($args2)*));","highlight_start":5,"highlight_end":69}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/iso8601-0.3.0/src/parsers.rs","byte_start":1723,"byte_end":1761,"line_start":64,"line_end":64,"column_start":9,"column_end":47,"is_primary":false,"text":[{"text":"        flat_map!($input, take!(1), check!(f))","highlight_start":9,"highlight_end":47}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.2.3/src/sequence.rs","byte_start":10503,"byte_end":10526,"line_start":366,"line_end":366,"column_start":14,"column_end":37,"is_primary":false,"text":[{"text":"      match  $submac!(i_, $($args)*) {","highlight_start":14,"highlight_end":37}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.2.3/src/sequence.rs","byte_start":11854,"byte_end":11885,"line_start":421,"line_end":421,"column_start":7,"column_end":38,"is_primary":false,"text":[{"text":"      do_parse!(__impl $i, $($rest)*)","highlight_start":7,"highlight_end":38}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.2.3/src/macros.rs","byte_start":3282,"byte_end":3304,"line_start":114,"line_end":114,"column_start":13,"column_end":35,"is_primary":false,"text":[{"text":"            $submac!(i, $($args)*)","highlight_start":13,"highlight_end":35}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/iso8601-0.3.0/src/parsers.rs","byte_start":4848,"byte_end":5069,"line_start":146,"line_end":148,"column_start":1,"column_end":78,"is_primary":false,"text":[{"text":"named!(lower_hour <CompleteByteSlice,u32>, do_parse!(f:char_between!('0','1') >>","highlight_start":1,"highlight_end":81},{"text":"                                   s:char_between!('0','9') >>","highlight_start":1,"highlight_end":63},{"text":"                                   ( buf_to_u32(f.0)*10 + buf_to_u32(s.0) )));","highlight_start":1,"highlight_end":78}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"named!","def_site_span":{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.2.3/src/macros.rs","byte_start":2688,"byte_end":2706,"line_start":98,"line_end":98,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! named (","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"do_parse!","def_site_span":{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.2.3/src/sequence.rs","byte_start":8622,"byte_end":8643,"line_start":305,"line_end":305,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! do_parse (","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"do_parse!","def_site_span":{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.2.3/src/sequence.rs","byte_start":8622,"byte_end":8643,"line_start":305,"line_end":305,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! do_parse (","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"char_between!","def_site_span":{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/iso8601-0.3.0/src/parsers.rs","byte_start":1563,"byte_end":1781,"line_start":60,"line_end":67,"column_start":1,"column_end":3,"is_primary":false,"text":[{"text":"macro_rules! char_between(","highlight_start":1,"highlight_end":27},{"text":"    ($input:expr, $min:expr, $max:expr) => (","highlight_start":1,"highlight_end":45},{"text":"        {","highlight_start":1,"highlight_end":10},{"text":"        fn f(c: u8) -> bool { c >= ($min as u8) && c <= ($max as u8)}","highlight_start":1,"highlight_end":70},{"text":"        flat_map!($input, take!(1), check!(f))","highlight_start":1,"highlight_end":47},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    );","highlight_start":1,"highlight_end":7},{"text":");","highlight_start":1,"highlight_end":3}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"flat_map!","def_site_span":{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.2.3/src/simple_errors.rs","byte_start":5500,"byte_end":5521,"line_start":176,"line_end":176,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! flat_map(","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"flat_map!","def_site_span":{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.2.3/src/simple_errors.rs","byte_start":5500,"byte_end":5521,"line_start":176,"line_end":176,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! flat_map(","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"check!","def_site_span":{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/iso8601-0.3.0/src/parsers.rs","byte_start":1064,"byte_end":1561,"line_start":37,"line_end":58,"column_start":1,"column_end":3,"is_primary":false,"text":[{"text":"macro_rules! check(","highlight_start":1,"highlight_end":20},{"text":"  ($input:expr, $submac:ident!( $($args:tt)* )) => (","highlight_start":1,"highlight_end":53},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    {","highlight_start":1,"highlight_end":6},{"text":"      let mut failed = false;","highlight_start":1,"highlight_end":30},{"text":"      for &idx in $input.0 {","highlight_start":1,"highlight_end":29},{"text":"        if !$submac!(idx, $($args)*) {","highlight_start":1,"highlight_end":39},{"text":"            failed = true;","highlight_start":1,"highlight_end":27},{"text":"            break;","highlight_start":1,"highlight_end":19},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"      }","highlight_start":1,"highlight_end":8},{"text":"      if failed {","highlight_start":1,"highlight_end":18},{"text":"        Err(nom::Err::Error(error_position!($input, nom::ErrorKind::Custom(20u32))))","highlight_start":1,"highlight_end":85},{"text":"      } else {","highlight_start":1,"highlight_end":15},{"text":"        Ok((CompleteByteSlice(&b\"\"[..]), $input))","highlight_start":1,"highlight_end":50},{"text":"      }","highlight_start":1,"highlight_end":8},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"  );","highlight_start":1,"highlight_end":5},{"text":"  ($input:expr, $f:expr) => (","highlight_start":1,"highlight_end":30},{"text":"    check!($input, call!($f));","highlight_start":1,"highlight_end":31},{"text":"  );","highlight_start":1,"highlight_end":5},{"text":");","highlight_start":1,"highlight_end":3}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"macro invocations at the end of a block are treated as expressions","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"to ignore the value produced by the macro, add a semicolon after the invocation of `check`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"`#[allow(semicolon_in_expressions_from_macros)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: trailing semicolon in macro used in expression position\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/iso8601-0.3.0/src/parsers.rs:56:30\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m56\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m    check!($input, call!($f));\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                               \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m146\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m/\u001b[0m\u001b[0m \u001b[0m\u001b[0mnamed!(lower_hour <CompleteByteSlice,u32>, do_parse!(f:char_between!('0','1') >>\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m147\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                                   s:char_between!('0','9') >>\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m148\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                                   ( buf_to_u32(f.0)*10 + buf_to_u32(s.0) )));\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|_____________________________________________________________________________-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: macro invocations at the end of a block are treated as expressions\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: to ignore the value produced by the macro, add a semicolon after the invocation of `check`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[allow(semicolon_in_expressions_from_macros)]` on by default\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `check` which comes from the expansion of the macro `named` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}},{"diagnostic":{"message":"trailing semicolon in macro used in expression position","code":{"code":"semicolon_in_expressions_from_macros","explanation":null},"level":"warning","spans":[{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/iso8601-0.3.0/src/parsers.rs","byte_start":1552,"byte_end":1553,"line_start":56,"line_end":56,"column_start":30,"column_end":31,"is_primary":true,"text":[{"text":"    check!($input, call!($f));","highlight_start":30,"highlight_end":31}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.2.3/src/simple_errors.rs","byte_start":6253,"byte_end":6277,"line_start":195,"line_end":195,"column_start":15,"column_end":39,"is_primary":false,"text":[{"text":"        match $submac2!(o, $($args2)*) {","highlight_start":15,"highlight_end":39}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.2.3/src/simple_errors.rs","byte_start":5610,"byte_end":5674,"line_start":178,"line_end":178,"column_start":5,"column_end":69,"is_primary":false,"text":[{"text":"    flat_map!(__impl $i, $submac!($($args)*), $submac2!($($args2)*));","highlight_start":5,"highlight_end":69}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/iso8601-0.3.0/src/parsers.rs","byte_start":1723,"byte_end":1761,"line_start":64,"line_end":64,"column_start":9,"column_end":47,"is_primary":false,"text":[{"text":"        flat_map!($input, take!(1), check!(f))","highlight_start":9,"highlight_end":47}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.2.3/src/sequence.rs","byte_start":10503,"byte_end":10526,"line_start":366,"line_end":366,"column_start":14,"column_end":37,"is_primary":false,"text":[{"text":"      match  $submac!(i_, $($args)*) {","highlight_start":14,"highlight_end":37}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.2.3/src/sequence.rs","byte_start":10648,"byte_end":10679,"line_start":371,"line_end":371,"column_start":11,"column_end":42,"is_primary":false,"text":[{"text":"          do_parse!(__impl i_, $($rest)*)","highlight_start":11,"highlight_end":42}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.2.3/src/sequence.rs","byte_start":11854,"byte_end":11885,"line_start":421,"line_end":421,"column_start":7,"column_end":38,"is_primary":false,"text":[{"text":"      do_parse!(__impl $i, $($rest)*)","highlight_start":7,"highlight_end":38}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.2.3/src/macros.rs","byte_start":3282,"byte_end":3304,"line_start":114,"line_end":114,"column_start":13,"column_end":35,"is_primary":false,"text":[{"text":"            $submac!(i, $($args)*)","highlight_start":13,"highlight_end":35}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/iso8601-0.3.0/src/parsers.rs","byte_start":4848,"byte_end":5069,"line_start":146,"line_end":148,"column_start":1,"column_end":78,"is_primary":false,"text":[{"text":"named!(lower_hour <CompleteByteSlice,u32>, do_parse!(f:char_between!('0','1') >>","highlight_start":1,"highlight_end":81},{"text":"                                   s:char_between!('0','9') >>","highlight_start":1,"highlight_end":63},{"text":"                                   ( buf_to_u32(f.0)*10 + buf_to_u32(s.0) )));","highlight_start":1,"highlight_end":78}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"named!","def_site_span":{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.2.3/src/macros.rs","byte_start":2688,"byte_end":2706,"line_start":98,"line_end":98,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! named (","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"do_parse!","def_site_span":{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.2.3/src/sequence.rs","byte_start":8622,"byte_end":8643,"line_start":305,"line_end":305,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! do_parse (","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"do_parse!","def_site_span":{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.2.3/src/sequence.rs","byte_start":8622,"byte_end":8643,"line_start":305,"line_end":305,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! do_parse (","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"do_parse!","def_site_span":{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.2.3/src/sequence.rs","byte_start":8622,"byte_end":8643,"line_start":305,"line_end":305,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! do_parse (","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"char_between!","def_site_span":{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/iso8601-0.3.0/src/parsers.rs","byte_start":1563,"byte_end":1781,"line_start":60,"line_end":67,"column_start":1,"column_end":3,"is_primary":false,"text":[{"text":"macro_rules! char_between(","highlight_start":1,"highlight_end":27},{"text":"    ($input:expr, $min:expr, $max:expr) => (","highlight_start":1,"highlight_end":45},{"text":"        {","highlight_start":1,"highlight_end":10},{"text":"        fn f(c: u8) -> bool { c >= ($min as u8) && c <= ($max as u8)}","highlight_start":1,"highlight_end":70},{"text":"        flat_map!($input, take!(1), check!(f))","highlight_start":1,"highlight_end":47},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    );","highlight_start":1,"highlight_end":7},{"text":");","highlight_start":1,"highlight_end":3}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"flat_map!","def_site_span":{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.2.3/src/simple_errors.rs","byte_start":5500,"byte_end":5521,"line_start":176,"line_end":176,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! flat_map(","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"flat_map!","def_site_span":{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.2.3/src/simple_errors.rs","byte_start":5500,"byte_end":5521,"line_start":176,"line_end":176,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! flat_map(","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"check!","def_site_span":{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/iso8601-0.3.0/src/parsers.rs","byte_start":1064,"byte_end":1561,"line_start":37,"line_end":58,"column_start":1,"column_end":3,"is_primary":false,"text":[{"text":"macro_rules! check(","highlight_start":1,"highlight_end":20},{"text":"  ($input:expr, $submac:ident!( $($args:tt)* )) => (","highlight_start":1,"highlight_end":53},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    {","highlight_start":1,"highlight_end":6},{"text":"      let mut failed = false;","highlight_start":1,"highlight_end":30},{"text":"      for &idx in $input.0 {","highlight_start":1,"highlight_end":29},{"text":"        if !$submac!(idx, $($args)*) {","highlight_start":1,"highlight_end":39},{"text":"            failed = true;","highlight_start":1,"highlight_end":27},{"text":"            break;","highlight_start":1,"highlight_end":19},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"      }","highlight_start":1,"highlight_end":8},{"text":"      if failed {","highlight_start":1,"highlight_end":18},{"text":"        Err(nom::Err::Error(error_position!($input, nom::ErrorKind::Custom(20u32))))","highlight_start":1,"highlight_end":85},{"text":"      } else {","highlight_start":1,"highlight_end":15},{"text":"        Ok((CompleteByteSlice(&b\"\"[..]), $input))","highlight_start":1,"highlight_end":50},{"text":"      }","highlight_start":1,"highlight_end":8},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"  );","highlight_start":1,"highlight_end":5},{"text":"  ($input:expr, $f:expr) => (","highlight_start":1,"highlight_end":30},{"text":"    check!($input, call!($f));","highlight_start":1,"highlight_end":31},{"text":"  );","highlight_start":1,"highlight_end":5},{"text":");","highlight_start":1,"highlight_end":3}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"macro invocations at the end of a block are treated as expressions","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"to ignore the value produced by the macro, add a semicolon after the invocation of `check`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"`#[allow(semicolon_in_expressions_from_macros)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: trailing semicolon in macro used in expression position\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/iso8601-0.3.0/src/parsers.rs:56:30\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m56\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m    check!($input, call!($f));\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                               \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m146\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m/\u001b[0m\u001b[0m \u001b[0m\u001b[0mnamed!(lower_hour <CompleteByteSlice,u32>, do_parse!(f:char_between!('0','1') >>\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m147\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                                   s:char_between!('0','9') >>\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m148\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                                   ( buf_to_u32(f.0)*10 + buf_to_u32(s.0) )));\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|_____________________________________________________________________________-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: macro invocations at the end of a block are treated as expressions\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: to ignore the value produced by the macro, add a semicolon after the invocation of `check`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[allow(semicolon_in_expressions_from_macros)]` on by default\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `check` which comes from the expansion of the macro `named` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}},{"diagnostic":{"message":"trailing semicolon in macro used in expression position","code":{"code":"semicolon_in_expressions_from_macros","explanation":null},"level":"warning","spans":[{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/iso8601-0.3.0/src/parsers.rs","byte_start":1552,"byte_end":1553,"line_start":56,"line_end":56,"column_start":30,"column_end":31,"is_primary":true,"text":[{"text":"    check!($input, call!($f));","highlight_start":30,"highlight_end":31}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.2.3/src/simple_errors.rs","byte_start":6253,"byte_end":6277,"line_start":195,"line_end":195,"column_start":15,"column_end":39,"is_primary":false,"text":[{"text":"        match $submac2!(o, $($args2)*) {","highlight_start":15,"highlight_end":39}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.2.3/src/simple_errors.rs","byte_start":5610,"byte_end":5674,"line_start":178,"line_end":178,"column_start":5,"column_end":69,"is_primary":false,"text":[{"text":"    flat_map!(__impl $i, $submac!($($args)*), $submac2!($($args2)*));","highlight_start":5,"highlight_end":69}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/iso8601-0.3.0/src/parsers.rs","byte_start":1723,"byte_end":1761,"line_start":64,"line_end":64,"column_start":9,"column_end":47,"is_primary":false,"text":[{"text":"        flat_map!($input, take!(1), check!(f))","highlight_start":9,"highlight_end":47}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.2.3/src/sequence.rs","byte_start":10503,"byte_end":10526,"line_start":366,"line_end":366,"column_start":14,"column_end":37,"is_primary":false,"text":[{"text":"      match  $submac!(i_, $($args)*) {","highlight_start":14,"highlight_end":37}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.2.3/src/sequence.rs","byte_start":10130,"byte_end":10161,"line_start":351,"line_end":351,"column_start":11,"column_end":42,"is_primary":false,"text":[{"text":"          do_parse!(__impl i_, $($rest)*)","highlight_start":11,"highlight_end":42}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.2.3/src/sequence.rs","byte_start":11854,"byte_end":11885,"line_start":421,"line_end":421,"column_start":7,"column_end":38,"is_primary":false,"text":[{"text":"      do_parse!(__impl $i, $($rest)*)","highlight_start":7,"highlight_end":38}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.2.3/src/macros.rs","byte_start":3282,"byte_end":3304,"line_start":114,"line_end":114,"column_start":13,"column_end":35,"is_primary":false,"text":[{"text":"            $submac!(i, $($args)*)","highlight_start":13,"highlight_end":35}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/iso8601-0.3.0/src/parsers.rs","byte_start":5071,"byte_end":5257,"line_start":149,"line_end":151,"column_start":1,"column_end":58,"is_primary":false,"text":[{"text":"named!(upper_hour <CompleteByteSlice,u32>, do_parse!(tag!(\"2\") >>","highlight_start":1,"highlight_end":66},{"text":"                                   s:char_between!('0','4') >>","highlight_start":1,"highlight_end":63},{"text":"                                   (20+buf_to_u32(s.0))));","highlight_start":1,"highlight_end":58}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"named!","def_site_span":{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.2.3/src/macros.rs","byte_start":2688,"byte_end":2706,"line_start":98,"line_end":98,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! named (","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"do_parse!","def_site_span":{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.2.3/src/sequence.rs","byte_start":8622,"byte_end":8643,"line_start":305,"line_end":305,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! do_parse (","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"do_parse!","def_site_span":{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.2.3/src/sequence.rs","byte_start":8622,"byte_end":8643,"line_start":305,"line_end":305,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! do_parse (","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"do_parse!","def_site_span":{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.2.3/src/sequence.rs","byte_start":8622,"byte_end":8643,"line_start":305,"line_end":305,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! do_parse (","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"char_between!","def_site_span":{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/iso8601-0.3.0/src/parsers.rs","byte_start":1563,"byte_end":1781,"line_start":60,"line_end":67,"column_start":1,"column_end":3,"is_primary":false,"text":[{"text":"macro_rules! char_between(","highlight_start":1,"highlight_end":27},{"text":"    ($input:expr, $min:expr, $max:expr) => (","highlight_start":1,"highlight_end":45},{"text":"        {","highlight_start":1,"highlight_end":10},{"text":"        fn f(c: u8) -> bool { c >= ($min as u8) && c <= ($max as u8)}","highlight_start":1,"highlight_end":70},{"text":"        flat_map!($input, take!(1), check!(f))","highlight_start":1,"highlight_end":47},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    );","highlight_start":1,"highlight_end":7},{"text":");","highlight_start":1,"highlight_end":3}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"flat_map!","def_site_span":{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.2.3/src/simple_errors.rs","byte_start":5500,"byte_end":5521,"line_start":176,"line_end":176,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! flat_map(","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"flat_map!","def_site_span":{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.2.3/src/simple_errors.rs","byte_start":5500,"byte_end":5521,"line_start":176,"line_end":176,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! flat_map(","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"check!","def_site_span":{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/iso8601-0.3.0/src/parsers.rs","byte_start":1064,"byte_end":1561,"line_start":37,"line_end":58,"column_start":1,"column_end":3,"is_primary":false,"text":[{"text":"macro_rules! check(","highlight_start":1,"highlight_end":20},{"text":"  ($input:expr, $submac:ident!( $($args:tt)* )) => (","highlight_start":1,"highlight_end":53},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    {","highlight_start":1,"highlight_end":6},{"text":"      let mut failed = false;","highlight_start":1,"highlight_end":30},{"text":"      for &idx in $input.0 {","highlight_start":1,"highlight_end":29},{"text":"        if !$submac!(idx, $($args)*) {","highlight_start":1,"highlight_end":39},{"text":"            failed = true;","highlight_start":1,"highlight_end":27},{"text":"            break;","highlight_start":1,"highlight_end":19},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"      }","highlight_start":1,"highlight_end":8},{"text":"      if failed {","highlight_start":1,"highlight_end":18},{"text":"        Err(nom::Err::Error(error_position!($input, nom::ErrorKind::Custom(20u32))))","highlight_start":1,"highlight_end":85},{"text":"      } else {","highlight_start":1,"highlight_end":15},{"text":"        Ok((CompleteByteSlice(&b\"\"[..]), $input))","highlight_start":1,"highlight_end":50},{"text":"      }","highlight_start":1,"highlight_end":8},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"  );","highlight_start":1,"highlight_end":5},{"text":"  ($input:expr, $f:expr) => (","highlight_start":1,"highlight_end":30},{"text":"    check!($input, call!($f));","highlight_start":1,"highlight_end":31},{"text":"  );","highlight_start":1,"highlight_end":5},{"text":");","highlight_start":1,"highlight_end":3}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"macro invocations at the end of a block are treated as expressions","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"to ignore the value produced by the macro, add a semicolon after the invocation of `check`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"`#[allow(semicolon_in_expressions_from_macros)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: trailing semicolon in macro used in expression position\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/iso8601-0.3.0/src/parsers.rs:56:30\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m56\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m    check!($input, call!($f));\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                               \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m149\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m/\u001b[0m\u001b[0m \u001b[0m\u001b[0mnamed!(upper_hour <CompleteByteSlice,u32>, do_parse!(tag!(\"2\") >>\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m150\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                                   s:char_between!('0','4') >>\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m151\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                                   (20+buf_to_u32(s.0))));\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|_________________________________________________________-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: macro invocations at the end of a block are treated as expressions\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: to ignore the value produced by the macro, add a semicolon after the invocation of `check`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[allow(semicolon_in_expressions_from_macros)]` on by default\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `check` which comes from the expansion of the macro `named` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}},{"diagnostic":{"message":"trailing semicolon in macro used in expression position","code":{"code":"semicolon_in_expressions_from_macros","explanation":null},"level":"warning","spans":[{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/iso8601-0.3.0/src/parsers.rs","byte_start":1552,"byte_end":1553,"line_start":56,"line_end":56,"column_start":30,"column_end":31,"is_primary":true,"text":[{"text":"    check!($input, call!($f));","highlight_start":30,"highlight_end":31}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.2.3/src/simple_errors.rs","byte_start":6253,"byte_end":6277,"line_start":195,"line_end":195,"column_start":15,"column_end":39,"is_primary":false,"text":[{"text":"        match $submac2!(o, $($args2)*) {","highlight_start":15,"highlight_end":39}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.2.3/src/simple_errors.rs","byte_start":5610,"byte_end":5674,"line_start":178,"line_end":178,"column_start":5,"column_end":69,"is_primary":false,"text":[{"text":"    flat_map!(__impl $i, $submac!($($args)*), $submac2!($($args2)*));","highlight_start":5,"highlight_end":69}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/iso8601-0.3.0/src/parsers.rs","byte_start":1723,"byte_end":1761,"line_start":64,"line_end":64,"column_start":9,"column_end":47,"is_primary":false,"text":[{"text":"        flat_map!($input, take!(1), check!(f))","highlight_start":9,"highlight_end":47}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.2.3/src/sequence.rs","byte_start":10503,"byte_end":10526,"line_start":366,"line_end":366,"column_start":14,"column_end":37,"is_primary":false,"text":[{"text":"      match  $submac!(i_, $($args)*) {","highlight_start":14,"highlight_end":37}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.2.3/src/sequence.rs","byte_start":11854,"byte_end":11885,"line_start":421,"line_end":421,"column_start":7,"column_end":38,"is_primary":false,"text":[{"text":"      do_parse!(__impl $i, $($rest)*)","highlight_start":7,"highlight_end":38}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.2.3/src/macros.rs","byte_start":3282,"byte_end":3304,"line_start":114,"line_end":114,"column_start":13,"column_end":35,"is_primary":false,"text":[{"text":"            $submac!(i, $($args)*)","highlight_start":13,"highlight_end":35}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/iso8601-0.3.0/src/parsers.rs","byte_start":5335,"byte_end":5560,"line_start":155,"line_end":157,"column_start":1,"column_end":80,"is_primary":false,"text":[{"text":"named!(below_sixty <CompleteByteSlice,u32>, do_parse!(f:char_between!('0','5') >>","highlight_start":1,"highlight_end":82},{"text":"                                    s:char_between!('0','9') >>","highlight_start":1,"highlight_end":64},{"text":"                                    ( buf_to_u32(f.0)*10 + buf_to_u32(s.0) ) ));","highlight_start":1,"highlight_end":80}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"named!","def_site_span":{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.2.3/src/macros.rs","byte_start":2688,"byte_end":2706,"line_start":98,"line_end":98,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! named (","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"do_parse!","def_site_span":{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.2.3/src/sequence.rs","byte_start":8622,"byte_end":8643,"line_start":305,"line_end":305,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! do_parse (","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"do_parse!","def_site_span":{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.2.3/src/sequence.rs","byte_start":8622,"byte_end":8643,"line_start":305,"line_end":305,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! do_parse (","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"char_between!","def_site_span":{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/iso8601-0.3.0/src/parsers.rs","byte_start":1563,"byte_end":1781,"line_start":60,"line_end":67,"column_start":1,"column_end":3,"is_primary":false,"text":[{"text":"macro_rules! char_between(","highlight_start":1,"highlight_end":27},{"text":"    ($input:expr, $min:expr, $max:expr) => (","highlight_start":1,"highlight_end":45},{"text":"        {","highlight_start":1,"highlight_end":10},{"text":"        fn f(c: u8) -> bool { c >= ($min as u8) && c <= ($max as u8)}","highlight_start":1,"highlight_end":70},{"text":"        flat_map!($input, take!(1), check!(f))","highlight_start":1,"highlight_end":47},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    );","highlight_start":1,"highlight_end":7},{"text":");","highlight_start":1,"highlight_end":3}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"flat_map!","def_site_span":{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.2.3/src/simple_errors.rs","byte_start":5500,"byte_end":5521,"line_start":176,"line_end":176,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! flat_map(","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"flat_map!","def_site_span":{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.2.3/src/simple_errors.rs","byte_start":5500,"byte_end":5521,"line_start":176,"line_end":176,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! flat_map(","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"check!","def_site_span":{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/iso8601-0.3.0/src/parsers.rs","byte_start":1064,"byte_end":1561,"line_start":37,"line_end":58,"column_start":1,"column_end":3,"is_primary":false,"text":[{"text":"macro_rules! check(","highlight_start":1,"highlight_end":20},{"text":"  ($input:expr, $submac:ident!( $($args:tt)* )) => (","highlight_start":1,"highlight_end":53},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    {","highlight_start":1,"highlight_end":6},{"text":"      let mut failed = false;","highlight_start":1,"highlight_end":30},{"text":"      for &idx in $input.0 {","highlight_start":1,"highlight_end":29},{"text":"        if !$submac!(idx, $($args)*) {","highlight_start":1,"highlight_end":39},{"text":"            failed = true;","highlight_start":1,"highlight_end":27},{"text":"            break;","highlight_start":1,"highlight_end":19},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"      }","highlight_start":1,"highlight_end":8},{"text":"      if failed {","highlight_start":1,"highlight_end":18},{"text":"        Err(nom::Err::Error(error_position!($input, nom::ErrorKind::Custom(20u32))))","highlight_start":1,"highlight_end":85},{"text":"      } else {","highlight_start":1,"highlight_end":15},{"text":"        Ok((CompleteByteSlice(&b\"\"[..]), $input))","highlight_start":1,"highlight_end":50},{"text":"      }","highlight_start":1,"highlight_end":8},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"  );","highlight_start":1,"highlight_end":5},{"text":"  ($input:expr, $f:expr) => (","highlight_start":1,"highlight_end":30},{"text":"    check!($input, call!($f));","highlight_start":1,"highlight_end":31},{"text":"  );","highlight_start":1,"highlight_end":5},{"text":");","highlight_start":1,"highlight_end":3}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"macro invocations at the end of a block are treated as expressions","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"to ignore the value produced by the macro, add a semicolon after the invocation of `check`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"`#[allow(semicolon_in_expressions_from_macros)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: trailing semicolon in macro used in expression position\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/iso8601-0.3.0/src/parsers.rs:56:30\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m56\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m    check!($input, call!($f));\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                               \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m155\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m/\u001b[0m\u001b[0m \u001b[0m\u001b[0mnamed!(below_sixty <CompleteByteSlice,u32>, do_parse!(f:char_between!('0','5') >>\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m156\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                                    s:char_between!('0','9') >>\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m157\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                                    ( buf_to_u32(f.0)*10 + buf_to_u32(s.0) ) ));\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|_______________________________________________________________________________-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: macro invocations at the end of a block are treated as expressions\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: to ignore the value produced by the macro, add a semicolon after the invocation of `check`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[allow(semicolon_in_expressions_from_macros)]` on by default\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `check` which comes from the expansion of the macro `named` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}},{"diagnostic":{"message":"trailing semicolon in macro used in expression position","code":{"code":"semicolon_in_expressions_from_macros","explanation":null},"level":"warning","spans":[{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/iso8601-0.3.0/src/parsers.rs","byte_start":1552,"byte_end":1553,"line_start":56,"line_end":56,"column_start":30,"column_end":31,"is_primary":true,"text":[{"text":"    check!($input, call!($f));","highlight_start":30,"highlight_end":31}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.2.3/src/simple_errors.rs","byte_start":6253,"byte_end":6277,"line_start":195,"line_end":195,"column_start":15,"column_end":39,"is_primary":false,"text":[{"text":"        match $submac2!(o, $($args2)*) {","highlight_start":15,"highlight_end":39}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.2.3/src/simple_errors.rs","byte_start":5610,"byte_end":5674,"line_start":178,"line_end":178,"column_start":5,"column_end":69,"is_primary":false,"text":[{"text":"    flat_map!(__impl $i, $submac!($($args)*), $submac2!($($args2)*));","highlight_start":5,"highlight_end":69}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/iso8601-0.3.0/src/parsers.rs","byte_start":1723,"byte_end":1761,"line_start":64,"line_end":64,"column_start":9,"column_end":47,"is_primary":false,"text":[{"text":"        flat_map!($input, take!(1), check!(f))","highlight_start":9,"highlight_end":47}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.2.3/src/sequence.rs","byte_start":10503,"byte_end":10526,"line_start":366,"line_end":366,"column_start":14,"column_end":37,"is_primary":false,"text":[{"text":"      match  $submac!(i_, $($args)*) {","highlight_start":14,"highlight_end":37}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.2.3/src/sequence.rs","byte_start":10648,"byte_end":10679,"line_start":371,"line_end":371,"column_start":11,"column_end":42,"is_primary":false,"text":[{"text":"          do_parse!(__impl i_, $($rest)*)","highlight_start":11,"highlight_end":42}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.2.3/src/sequence.rs","byte_start":11854,"byte_end":11885,"line_start":421,"line_end":421,"column_start":7,"column_end":38,"is_primary":false,"text":[{"text":"      do_parse!(__impl $i, $($rest)*)","highlight_start":7,"highlight_end":38}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.2.3/src/macros.rs","byte_start":3282,"byte_end":3304,"line_start":114,"line_end":114,"column_start":13,"column_end":35,"is_primary":false,"text":[{"text":"            $submac!(i, $($args)*)","highlight_start":13,"highlight_end":35}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/iso8601-0.3.0/src/parsers.rs","byte_start":5335,"byte_end":5560,"line_start":155,"line_end":157,"column_start":1,"column_end":80,"is_primary":false,"text":[{"text":"named!(below_sixty <CompleteByteSlice,u32>, do_parse!(f:char_between!('0','5') >>","highlight_start":1,"highlight_end":82},{"text":"                                    s:char_between!('0','9') >>","highlight_start":1,"highlight_end":64},{"text":"                                    ( buf_to_u32(f.0)*10 + buf_to_u32(s.0) ) ));","highlight_start":1,"highlight_end":80}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"named!","def_site_span":{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.2.3/src/macros.rs","byte_start":2688,"byte_end":2706,"line_start":98,"line_end":98,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! named (","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"do_parse!","def_site_span":{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.2.3/src/sequence.rs","byte_start":8622,"byte_end":8643,"line_start":305,"line_end":305,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! do_parse (","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"do_parse!","def_site_span":{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.2.3/src/sequence.rs","byte_start":8622,"byte_end":8643,"line_start":305,"line_end":305,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! do_parse (","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"do_parse!","def_site_span":{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.2.3/src/sequence.rs","byte_start":8622,"byte_end":8643,"line_start":305,"line_end":305,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! do_parse (","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"char_between!","def_site_span":{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/iso8601-0.3.0/src/parsers.rs","byte_start":1563,"byte_end":1781,"line_start":60,"line_end":67,"column_start":1,"column_end":3,"is_primary":false,"text":[{"text":"macro_rules! char_between(","highlight_start":1,"highlight_end":27},{"text":"    ($input:expr, $min:expr, $max:expr) => (","highlight_start":1,"highlight_end":45},{"text":"        {","highlight_start":1,"highlight_end":10},{"text":"        fn f(c: u8) -> bool { c >= ($min as u8) && c <= ($max as u8)}","highlight_start":1,"highlight_end":70},{"text":"        flat_map!($input, take!(1), check!(f))","highlight_start":1,"highlight_end":47},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    );","highlight_start":1,"highlight_end":7},{"text":");","highlight_start":1,"highlight_end":3}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"flat_map!","def_site_span":{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.2.3/src/simple_errors.rs","byte_start":5500,"byte_end":5521,"line_start":176,"line_end":176,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! flat_map(","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"flat_map!","def_site_span":{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.2.3/src/simple_errors.rs","byte_start":5500,"byte_end":5521,"line_start":176,"line_end":176,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! flat_map(","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"check!","def_site_span":{"file_name":"/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/iso8601-0.3.0/src/parsers.rs","byte_start":1064,"byte_end":1561,"line_start":37,"line_end":58,"column_start":1,"column_end":3,"is_primary":false,"text":[{"text":"macro_rules! check(","highlight_start":1,"highlight_end":20},{"text":"  ($input:expr, $submac:ident!( $($args:tt)* )) => (","highlight_start":1,"highlight_end":53},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    {","highlight_start":1,"highlight_end":6},{"text":"      let mut failed = false;","highlight_start":1,"highlight_end":30},{"text":"      for &idx in $input.0 {","highlight_start":1,"highlight_end":29},{"text":"        if !$submac!(idx, $($args)*) {","highlight_start":1,"highlight_end":39},{"text":"            failed = true;","highlight_start":1,"highlight_end":27},{"text":"            break;","highlight_start":1,"highlight_end":19},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"      }","highlight_start":1,"highlight_end":8},{"text":"      if failed {","highlight_start":1,"highlight_end":18},{"text":"        Err(nom::Err::Error(error_position!($input, nom::ErrorKind::Custom(20u32))))","highlight_start":1,"highlight_end":85},{"text":"      } else {","highlight_start":1,"highlight_end":15},{"text":"        Ok((CompleteByteSlice(&b\"\"[..]), $input))","highlight_start":1,"highlight_end":50},{"text":"      }","highlight_start":1,"highlight_end":8},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"  );","highlight_start":1,"highlight_end":5},{"text":"  ($input:expr, $f:expr) => (","highlight_start":1,"highlight_end":30},{"text":"    check!($input, call!($f));","highlight_start":1,"highlight_end":31},{"text":"  );","highlight_start":1,"highlight_end":5},{"text":");","highlight_start":1,"highlight_end":3}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"macro invocations at the end of a block are treated as expressions","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"to ignore the value produced by the macro, add a semicolon after the invocation of `check`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"`#[allow(semicolon_in_expressions_from_macros)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: trailing semicolon in macro used in expression position\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/nkeys/.cargo/registry/src/github.com-1ecc6299db9ec823/iso8601-0.3.0/src/parsers.rs:56:30\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m56\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m    check!($input, call!($f));\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                               \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m155\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m/\u001b[0m\u001b[0m \u001b[0m\u001b[0mnamed!(below_sixty <CompleteByteSlice,u32>, do_parse!(f:char_between!('0','5') >>\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m156\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                                    s:char_between!('0','9') >>\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m157\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                                    ( buf_to_u32(f.0)*10 + buf_to_u32(s.0) ) ));\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|_______________________________________________________________________________-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: macro invocations at the end of a block are treated as expressions\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: to ignore the value produced by the macro, add a semicolon after the invocation of `check`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[allow(semicolon_in_expressions_from_macros)]` on by default\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `check` which comes from the expansion of the macro `named` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}}]}
